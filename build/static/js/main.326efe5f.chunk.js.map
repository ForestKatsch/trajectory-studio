{"version":3,"sources":["components/progress/Circular.svg","webgl/shader.js","components/page/Header.jsx","webgl/loader.js","webgl/mesh.js","webgl/texture.js","webgl/material.js","webgl/renderer.js","webgl/fallback.vert","webgl/fallback.frag","webgl/spatial.js","webgl/scene.js","components/viewer/Orrery/shaders/default.vert","components/viewer/Orrery/renderer.js","components/viewer/Orrery/shaders/earth.frag","components/viewer/Orrery/shaders/star.frag","components/viewer/Orrery/shaders/atmosphere.frag","components/display/Empty.jsx","components/interactive/Switch.jsx","components/progress/Circular.jsx","components/viewer/Orrery/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","PageHeader","className","STATE","Asset","name","state","can_move_backwards","this","Logger","info","isDoneLoading","warn","emit","previous","asset","isLoaded","assets","length","Math","min","EventEmitter","Loader","handleAssetStateChange","bind","on","updateState","event","loader","setState","getCombinedState","Object","values","TYPE","BOOL","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","FVEC2","FVEC3","FVEC4","IVEC2","IVEC3","IVEC4","BVEC2","BVEC3","BVEC4","MAT2","MAT3","MAT4","TEXTURE","TEXTURE_2D","TEXTURE_CUBE_MAP","SAMPLER_2D","SAMPLER_CUBE","TYPE_NAMES","keys","key","FROM_GL_TYPE","Uniforms","dirty_function","uniforms","value","every","a","i","Shader","renderer","vertex","fragment","vertex_source","fragment_source","program","attributes","stage","source","gl","context","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","Error","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","fetchShaderParameters","deleteProgram","attribute_count","ACTIVE_ATTRIBUTES","attribute","getActiveAttrib","type","location","getAttribLocation","uniform_count","ACTIVE_UNIFORMS","uniform","getActiveUniform","getUniformLocation","active","useProgram","undefined","AUTO","uniform1i","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniformMatrix3fv","uniformMatrix4fv","uniform_name","texture","index","activeTexture","TEXTURE0","bindTexture","textures","startsWith","detectUniformType","setUniform","texture_name","setTextureUniforms","texture_index","expected_uniform_type","getTexture","uniform_texture","setTextureUniform","flatten","array","flat","push","apply","Buffer","mesh","data","buffer","options","offset","size","normalized","stride","debug","createBuffer","bufferData","STATIC_DRAW","bindBuffer","attrib","attribute_location","getAttributeLocation","enableVertexAttribArray","vertexAttribPointer","normalize","deleteBuffer","Mesh","buffers","ready","vertex_count","deinit","layers","triangles","layer_name","ARRAY_BUFFER","Float32Array","addAttribute","ELEMENT_ARRAY_BUFFER","Uint16Array","buffer_name","drawElements","TRIANGLES","WRAP","FILTER","Texture","parameters","image","min_filter","mag_filter","wrap","anisotropy_level","createTexture","color","setFromColorInit","format","RGBA","vec4","scale","Uint8Array","getGLTextureType","texImage2D","colora","colorb","cell_size","x","y","floor","checkers","createCheckerData","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","forEach","target","RGB","generateMipmap","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","deleteTexture","url","Image","onload","handleImageLoad","onerror","handleImageError","src","urls","replace","toString","padStart","loadCubemapFacesFromURL","images","map","handleCubemapImageLoad","loaded","applyParameters","assignCubemap","assign2D","srcType","targets","applyParameterAnisotropy","aniso_ext","getExtension","level","max_anisotropy_level","max","texParameterf","ext","TEXTURE_MAX_ANISOTROPY_EXT","assignImage","e","BLEND","DEPTH","current_material_index","Material","scene","shader_name","flagDirty","blend_mode","depth_mode","set","Renderer","canvas","paused","render_required","dpi","_dirty","performance","draw_call_count","fps","frametime_samples","frametime_total","frame_start","current_frame","extensions","shaders","meshes","initDebounce","debounce","init","resizeDebounce","resizeImmediate","terminate_rendering","handleLoaderStateChange","handleLoaderChildStateChange","VALID_WEBGL_OPTIONS","webgl_options","option_key","getContext","alpha","addEventListener","preventDefault","initExtensions","initShaders","initMeshes","initTextures","initCanvas","create","requestAnimationFrame","render","applyOptions","resize","applyTextureParameters","getAllAssets","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","arguments","extension","createMesh","aPosition","setFromColor","fromValues","setFromCheckerCubemap","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","CULL_FACE","cullFace","BACK","isReady","addAsset","hasAsset","getAsset","vec2","parentElement","clientWidth","clientHeight","window","devicePixelRatio","style","width","height","blendFunc","ONE","ZERO","SRC_ALPHA","disable","depthMask","update","shouldRender","setBlendMode","setDepthMode","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","draw","end","Date","now","SpatialData","order","RENDER_ORDER","spatial","MeshData","mesh_name","material","fallback_material","sort","shift","start","pow","getMaterial","camera","getData","CameraData","depth","modelview_matrix","near","far","TRANSPARENT","getMesh","getShader","get","use","setUniforms","fov","projection_matrix","mat4","world_matrix_inverse","world_matrix","perspective","PI","Spatial","position","vec3","rotation","quat","enabled","parent","children","render_sort","_data","callData","updateMatrices","getRenderSort","fromRotationTranslationScale","multiply","invert","updateRenderSort","updateUniforms","updatePost","renderables","hasDataFunction","child","getRenderables","recursive","method","Array","prototype","slice","call","remove","OPAQUE","Scene","root","b","batch","OrreryRenderer","desynchronized","loadCubemap","setParameters","setTimeout","default_vert","createQuadspheres","createPlanet","createCamera","display_atmospheres","earth_material","earth","setData","add","spinny","atmosphere_material","atmosphere","atmosphere_mesh","atmosphere_scatter_color","angle","sin","cos","setCamera","createQuadsphere","divisions","inverted","sign","normal","_triangles","createFace","vertex_function","d","x_start","y_start","x_end","y_end","t_idx","xp","xn","yp","yn","zp","zn","appendData","aNormal","setEnabled","fromEuler","viewer","stats_fps","stats_vertex_count","stats_draw_call_count","stats_frame_count","loading","isLoading","EmptyState","props","variant","title","message","Switch","checked","handleClick","onChange","onClick","label","React","Component","CircularProgress","visible","step","stepSize","rotate","transform","dangerouslySetInnerHTML","__html","CircularIcon","OrreryViewer","use_anisotropy","display_stats","login","errorMessage","handleRendererStateChanged","handleWindowResize","createRef","current","initRenderer","removeEventListener","deinitRenderer","emptyState","setOption","ref","createSwitchHandler","duration","toFixed","App","Orrery","Boolean","hostname","match","useDefaults","setLevel","TRACE","consoleHandler","createDefaultHandler","setHandler","messages","DEBUG","myHandler","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.326efe5f.chunk.js","sourcesContent":["module.exports = \"<svg xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" xmlns:cc=\\\"http://creativecommons.org/ns#\\\" xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\" xmlns:svg=\\\"http://www.w3.org/2000/svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\" xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\" sodipodi:docname=\\\"Circular.svg\\\" inkscape:version=\\\"1.0 (4035a4fb49, 2020-05-01)\\\" id=\\\"svg8\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 32 32\\\"><defs id=\\\"defs2\\\"><linearGradient id=\\\"linearGradient913\\\" inkscape:collect=\\\"always\\\"><stop id=\\\"stop909\\\" offset=\\\"0\\\" style=\\\"stop-color:#000000;stop-opacity:1;\\\"></stop><stop id=\\\"stop911\\\" offset=\\\"1\\\" style=\\\"stop-color:#000000;stop-opacity:0;\\\"></stop></linearGradient><linearGradient gradientTransform=\\\"matrix(1.0588235,0,0,1.0588235,-0.94117647,-0.94117647)\\\" gradientUnits=\\\"userSpaceOnUse\\\" y2=\\\"10\\\" x2=\\\"12\\\" y1=\\\"16\\\" x1=\\\"23\\\" id=\\\"linearGradient915\\\" xlink:href=\\\"#linearGradient913\\\" inkscape:collect=\\\"always\\\"></linearGradient></defs><sodipodi:namedview inkscape:snap-nodes=\\\"true\\\" inkscape:bbox-nodes=\\\"false\\\" inkscape:snap-bbox=\\\"true\\\" inkscape:snap-global=\\\"true\\\" inkscape:snap-center=\\\"true\\\" inkscape:snap-smooth-nodes=\\\"true\\\" units=\\\"px\\\" inkscape:window-maximized=\\\"0\\\" inkscape:window-y=\\\"20\\\" inkscape:window-x=\\\"0\\\" inkscape:window-height=\\\"1399\\\" inkscape:window-width=\\\"2560\\\" showgrid=\\\"true\\\" inkscape:document-rotation=\\\"0\\\" inkscape:current-layer=\\\"layer1\\\" inkscape:document-units=\\\"px\\\" inkscape:cy=\\\"11.686131\\\" inkscape:cx=\\\"10.895753\\\" inkscape:zoom=\\\"31.678384\\\" inkscape:pageshadow=\\\"2\\\" inkscape:pageopacity=\\\"0.0\\\" borderopacity=\\\"1.0\\\" bordercolor=\\\"#666666\\\" pagecolor=\\\"#ffffff\\\" id=\\\"base\\\"><inkscape:grid id=\\\"grid12\\\" type=\\\"xygrid\\\"></inkscape></sodipodi:namedview><metadata id=\\\"metadata5\\\"><rdf:RDF><cc:Work rdf:about><dc:format>image/svg+xml</dc:format><dc:type rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\"></dc><dc:title></dc:title></cc:Work></rdf:RDF></metadata><g id=\\\"layer1\\\" inkscape:groupmode=\\\"layer\\\" inkscape:label=\\\"Layer 1\\\"><path transform=\\\"rotate(-135)\\\" sodipodi:open=\\\"true\\\" id=\\\"path921\\\" style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:3;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.2;paint-order:markers fill stroke\\\" sodipodi:type=\\\"arc\\\" sodipodi:cx=\\\"-22.627417\\\" sodipodi:cy=\\\"1.6744707e-07\\\" sodipodi:rx=\\\"10\\\" sodipodi:ry=\\\"10\\\" sodipodi:start=\\\"1.8325957\\\" sodipodi:end=\\\"6.0213859\\\" sodipodi:arc-type=\\\"arc\\\" d=\\\"m -25.215607,9.6592585 a 10,10 0 0 1 -7.373757,-10.5308156 10,10 0 0 1 9.09039,-9.0903897 10,10 0 0 1 10.530816,7.3737563\\\" inkscape:transform-center-y=\\\"2.4999997\\\"></path><path transform=\\\"rotate(-135)\\\" id=\\\"path1119\\\" style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:3;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.8;paint-order:markers fill stroke\\\" sodipodi:type=\\\"arc\\\" sodipodi:cx=\\\"-22.627417\\\" sodipodi:cy=\\\"-3.1359626e-09\\\" sodipodi:rx=\\\"10\\\" sodipodi:ry=\\\"10\\\" sodipodi:start=\\\"0\\\" sodipodi:end=\\\"1.5707963\\\" sodipodi:arc-type=\\\"arc\\\" d=\\\"m -12.627417,0 a 10,10 0 0 1 -10,10\\\" inkscape:transform-center-y=\\\"-8.5355342\\\" sodipodi:open=\\\"true\\\"></path></g></svg>\"","\nimport Logger from 'js-logger';\n\nexport const TYPE = {\n  BOOL: 0x8B56,\n  \n  BYTE: 0x1400,\n  UNSIGNED_BYTE: 0x1401,\n  \n  SHORT: 0x1402,\n  UNSIGNED_SHORT: 0x1403,\n  \n  INT: 0x1404,\n  UNSIGNED_INT: 0x1405,\n  \n  FLOAT: 0x1406,\n  \n  FVEC2: 0x8B50,\n  FVEC3: 0x8B51,\n  FVEC4: 0x8B52,\n  \n  IVEC2: 0x8B53,\n  IVEC3: 0x8B54,\n  IVEC4: 0x8B55,\n  \n  BVEC2: 0x8B57,\n  BVEC3: 0x8B58,\n  BVEC4: 0x8B59,\n  \n  MAT2: 0x8B5A,\n  MAT3: 0x8B5B,\n  MAT4: 0x8B5C,\n  \n  TEXTURE: 0x1702,\n  TEXTURE_2D: 0x0DE1,\n  TEXTURE_CUBE_MAP: 0x8513,\n\n  SAMPLER_2D: 0x8B5E,\n  SAMPLER_CUBE: 0x8B60,\n};\n\nexport let TYPE_NAMES = {};\n\nfor(let key of Object.keys(TYPE)) {\n  TYPE_NAMES[TYPE[key]] = key;\n}\n\nexport let FROM_GL_TYPE = {};\n\nfor(let key of Object.keys(TYPE)) {\n  FROM_GL_TYPE[TYPE[key]] = key;\n}\n\nFROM_GL_TYPE[TYPE.SAMPLER_2D] = TYPE.TEXTURE_2D;\nFROM_GL_TYPE[TYPE.SAMPLER_CUBE] = TYPE.TEXTURE_CUBE_MAP;\n\nexport class Uniforms {\n  \n  constructor(dirty_function) {\n    this.dirty_function = dirty_function;\n    \n    this.uniforms = {};\n  }\n\n  set(name, value) {\n    if(name in this.uniforms) {\n      if(this.uniforms[name] === value) {\n        return;\n      }\n\n      if(typeof this.uniforms[name] === typeof []) {\n        if((this.uniforms[name].length === value.length) && \n           (this.uniforms[name].every((a, i) => { return a === value[i] }))) {\n          return;\n        }\n      }\n    }\n\n    if(typeof value === typeof []) {\n      this.uniforms[name] = [...value];\n    } else {\n      this.uniforms[name] = value;\n    }\n\n    //Logger.trace(`Uniform '${name}' is making this frame dirty`);\n    \n    this.dirty_function();\n  }\n\n  get() {\n    return this.uniforms;\n  }\n}\n\n// # `Shader`\n// This is a shader. (Dear god.)\n// It contains vertex and fragment shader sources.\n//\n// Lifecycle:\n// ```\n// <constructor>\n// init() # This compiles the shaders and links the program. This function can throw errors.\n// ... assuming init() was successful, the shader can now be used (with `use()`).\n// deinit() # This deletes the shaders and programs. The shader is now invalid and cannot be used.\n//\n// ```\nexport default class Shader {\n\n  constructor(renderer, name, vertex, fragment) {\n    this.renderer = renderer;\n\n    // The human-readable name of this shader.\n    this.name = name;\n\n    // The string sources for the vertex and fragment shaders.\n    this.vertex_source = vertex;\n    this.fragment_source = fragment;\n\n    // The WebGL vertex and fragment shader objects.\n    this.vertex = null;\n    this.fragment = null;\n\n    // The WebGL program.\n    this.program = null;\n\n    // Key-value object containing the attribute name as the key and the WebGL position index as the value.\n    this.attributes = {};\n    \n    this.uniforms = {};\n  }\n\n  // Compiles a single shader stage and returns the result, or throws an error.\n  compileShader(stage, source) {\n    const gl = this.renderer.context;\n    \n    const shader = gl.createShader(stage);\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      Logger.error(`Error while compiling WebGL shader '${this.name}'`, gl.getShaderInfoLog(shader), source);\n      gl.deleteShader(shader);\n      throw new Error('webgl-shader-compile');\n    }\n\n    return shader;        \n  }\n\n  // Initialize and compile this shader.\n  init() {\n    const gl = this.renderer.context;\n\n    // Use our convenience function to compile the two shaders.\n    this.vertex = this.compileShader(gl.VERTEX_SHADER, this.vertex_source);\n    this.fragment = this.compileShader(gl.FRAGMENT_SHADER, this.fragment_source);\n\n    this.program = gl.createProgram();\n    \n    gl.attachShader(this.program, this.vertex);\n    gl.attachShader(this.program, this.fragment);\n    \n    gl.linkProgram(this.program);\n\n    if(!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n      Logger.error(`Error while linking WebGL shader '${this.name}'`, gl.getProgramInfoLog(this.program));\n      this.program = null;\n      throw new Error('webgl-shader-link');\n    }\n\n    this.fetchShaderParameters();\n  }\n\n  // Deinitialize this shader.\n  deinit() {\n    const gl = this.renderer.context;\n\n    if(gl !== null) {\n      gl.deleteShader(this.vertex);\n      gl.deleteShader(this.fragment);\n      \n      gl.deleteProgram(this.program);\n    }\n    \n    this.program = null;\n  }\n\n  fetchShaderParameters() {\n    const gl = this.renderer.context;\n    \n    let attribute_count = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n    for(let i=0; i<attribute_count; i++) {\n      let attribute = gl.getActiveAttrib(this.program, i);\n\n      let type = FROM_GL_TYPE[attribute.type];\n      \n      this.attributes[attribute.name] = {\n        location: gl.getAttribLocation(this.program, attribute.name),\n        name: attribute.name,\n        type: type\n      };\n    }\n    \n    let uniform_count = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n    for(let i=0; i<uniform_count; i++) {\n      let uniform = gl.getActiveUniform(this.program, i);\n      \n      let type = FROM_GL_TYPE[uniform.type];\n\n      this.uniforms[uniform.name] = {\n        location: gl.getUniformLocation(this.program, uniform.name),\n        name: uniform.name,\n        type: type\n      };\n    }\n  }\n\n  // Sets this shader as active if necessary.\n  use() {\n    const gl = this.renderer.context;\n    \n    if(this.renderer.active.shader === this) {\n      return;\n    }\n\n    this.renderer.active.shader = this;\n    \n    gl.useProgram(this.program);\n  }\n\n  isReady() {\n    return this.program !== null;\n  }\n  \n  // Given an attribute name, returns the location or throws an error if the attribute does not exist.\n  getAttributeLocation(name) {\n    if(!(name in this.attributes)) {\n      //Logger.error(`Could not find attribute named '${name}' in shader '${this.name}'`);\n      return -1;\n      //throw new Error('webgl-shader-invalid-attribute');\n    }\n    \n    return this.attributes[name].location;\n  }\n\n  // Same as the above, but for uniforms.\n  getUniformLocation(name) {\n    if(!(name in this.uniforms)) {\n      //Logger.error(`Could not find uniform named '${name}' in shader '${this.name}'`);\n      return -1;\n      //throw new Error('webgl-shader-invalid-uniform');\n    }\n    \n    return this.uniforms[name].location;\n  }\n\n  // Given a name (for logging), a value, and an (optional) type,\n  // returns the type (if given), the autodetected type (which isn't guaranteed to be correct!), or null.\n  detectUniformType(name, value, type) {\n    if(type !== undefined && type !== TYPE.AUTO) {\n      return type;\n    }\n\n    if(typeof value === typeof 0) {\n      if(value % 1 === value) {\n        type = TYPE.INT;\n      } else {\n        type = TYPE.FLOAT;\n      }\n      // A texture.\n    } else if(typeof value === typeof '') {\n      type = TYPE.TEXTURE;\n    } else if(typeof value === typeof []) {\n      if(value.length === 2) {\n        type = TYPE.FVEC2;\n      } else if(value.length === 3) {\n        type = TYPE.FVEC3;\n      } else if(value.length === 4) {\n        type = TYPE.FVEC4;\n      } else if(value.length === 9) {\n        type = TYPE.MAT3;\n      } else if(value.length === 16) {\n        type = TYPE.MAT4;\n      } else {\n        Logger.warn(`Cannot auto-detect type of uniform '${name}' (on shader '${this.name}') array with ${value.length} elements, ignoring`, value);\n        return;\n      }\n    } else {\n      Logger.warn(`Cannot auto-detect type of uniform '${name}', ignoring`, value);\n      return null;\n    }\n\n    return type;\n  }\n\n  // Sets most uniform types. Does not set texture uniforms.\n  setUniform(name, value, type) {\n    const gl = this.renderer.context;\n    const location = this.getUniformLocation(name);\n\n    if(location < 0) {\n      return;\n    }\n    \n    // Don't log debug info by default. (It just produces absolutely ridiculous amounts of spam.)\n    if(false) {\n      let value_string = '?';\n\n      if(type >= TYPE.FVEC2 && type <= TYPE.BVEC4) {\n        value_string = `(${value})`;\n      } else if(type >= TYPE.MAT2 && type <= TYPE.MAT4) {\n        // TODO: split this out into separate functions.\n        if(type === TYPE.MAT3) {\n          value_string = `\n${value[0]}, ${value[3]}, ${value[6]},\n${value[1]}, ${value[4]}, ${value[7]},\n${value[2]}, ${value[5]}, ${value[8]},\n`;\n        } else if(type === TYPE.MAT4) {\n          value_string = `\n${value[0]}, ${value[4]}, ${value[8]}, ${value[12]},\n${value[1]}, ${value[5]}, ${value[9]}, ${value[13]},\n${value[2]}, ${value[6]}, ${value[10]}, ${value[14]},\n${value[3]}, ${value[7]}, ${value[11]}, ${value[15]}`;\n        }\n      }\n      \n      Logger.debug(`Setting uniform '${name}' of type '${type}' (${this.uniforms[name].type}) to`, value_string);\n    }\n\n    switch(type) {\n    case TYPE.INT:\n      gl.uniform1i(location, value);\n      break;\n    case TYPE.FLOAT:\n      gl.uniform1f(location, value);\n      break;\n    case TYPE.FVEC2:\n      gl.uniform2fv(location, value);\n      break;\n    case TYPE.FVEC3:\n      gl.uniform3fv(location, value);\n      break;\n    case TYPE.FVEC4:\n      gl.uniform4fv(location, value);\n      break;\n    case TYPE.MAT3:\n      gl.uniformMatrix3fv(location, false, value);\n      break;\n    case TYPE.MAT4:\n      gl.uniformMatrix4fv(location, false, value);\n      break;\n    case TYPE.TEXTURE:\n      Logger.warn(`Cannot set texture uniform '${name}' in 'setUniform'. (See 'setTextureUniform.)`, value);\n      break;\n    default:\n      Logger.warn(`Cannot set uniform '${name}' with unknown type '${type}' ignoring`, value);\n      break;\n    }\n  }\n\n  // Given a uniform name, a `Texture` (see `texture.js`, and a texture index, assigns\n  // the uniform.\n  setTextureUniform(uniform_name, texture, index) {\n    const gl = this.renderer.context;\n    const location = this.getUniformLocation(uniform_name);\n    \n    //Logger.debug(`Assigning '${texture.name}' as index ${index} for uniform '${uniform_name}'`);\n    \n    gl.activeTexture(gl.TEXTURE0 + index);\n    gl.bindTexture(texture.type, texture.texture);\n    gl.uniform1i(location, index);\n  }\n  \n  // Expects a key-value listing of uniforms.\n  // The uniform values should either be the value itself,\n  // or an array of [\"type\", value].\n  setUniforms(uniforms) {\n    let textures = {};\n    \n    for(let name of Object.keys(uniforms)) {\n      if(name.startsWith('@')) {\n        continue;\n      }\n\n      let value = uniforms[name];\n      let type = TYPE.AUTO;\n\n      if(typeof uniforms[name] === typeof [] && typeof uniforms[name][0] === typeof '') {\n        type = uniforms[name][0];\n        value = uniforms[name][1];\n      }\n\n      type = this.detectUniformType(name, value, type);\n\n      if(type === TYPE.TEXTURE) {\n        textures[name] = {\n          uniform_name: name,\n          texture_name: value\n        };\n        continue;\n      }\n      \n      this.setUniform(name, value, type);\n    }\n\n    this.setTextureUniforms(textures);\n  }\n\n  // Sets every texture required from the uniforms here. Note that the format\n  // for `uniforms` is not the same as above.\n  //\n  // TODO: optimize this.\n  setTextureUniforms(uniforms) {\n    let texture_index = 0;\n\n    // We need to assign every uniform no matter what.\n    for(let uniform_name of Object.keys(this.uniforms)) {\n      let uniform_info = this.uniforms[uniform_name];\n      \n      let expected_uniform_type = uniform_info.type;\n\n      if(expected_uniform_type !== TYPE.TEXTURE_2D &&\n         expected_uniform_type !== TYPE.TEXTURE_CUBE_MAP) {\n        continue;\n      }\n\n      let texture = null;\n      \n      if(expected_uniform_type === TYPE.TEXTURE_2D) {\n        texture = this.renderer.getTexture('@fallback');\n      } else if(expected_uniform_type === TYPE.TEXTURE_CUBE_MAP) {\n        texture = this.renderer.getTexture('@fallback-cube');\n      } else {\n        Logger.warn(`Unexpected texture type '${TYPE_NAMES[expected_uniform_type]}' for uniform '${uniform_name}' in shader '${this.name}', ignoring`);\n        continue;\n      }\n      \n      if(uniform_name in uniforms) {\n        let uniform_texture = this.renderer.getTexture(uniforms[uniform_name].texture_name);\n\n        if(uniform_texture.type === expected_uniform_type) {\n          texture = uniform_texture;\n          // We don't print out this warning if the fallback texture is being used.\n        } else if(uniform_texture.type !== null && !uniform_texture.name.startsWith('@')) {\n          Logger.warn(`Texture '${uniform_texture.name}' for uniform '${uniform_name}' on shader '${this.name}' is wrong texture type (should be '${TYPE_NAMES[expected_uniform_type]}', found '${TYPE_NAMES[uniform_texture.type]}'), using fallback`);\n        }\n      } else {\n        //Logger.warn(`No texture given for '${uniform_name}' on shader '${this.name}', using fallback`);\n      }\n      \n      this.setTextureUniform(uniform_name, texture, texture_index++);\n    }\n  }\n\n}\n\n","\nimport React from 'react';\n\nimport './Header.css';\n\nfunction PageHeader() {\n  return (\n    <header className=\"PageHeader App--theme-light\">\n      <h1>Orrery</h1>\n    </header>\n  );\n}\n\nexport default PageHeader;\n","\nimport EventEmitter from 'events';\n\nimport Logger from 'js-logger';\n\nexport const STATE = {\n  WAITING: 0,\n  LOADING: 1,\n  LOAD_COMPLETE: 2,\n  LOAD_ERROR: 3,\n};\n\n// Every asset added to the loader should extend this Asset class.\nexport class Asset extends EventEmitter {\n\n  constructor(name) {\n    super();\n    \n    this.name = name;\n    this.state = STATE.WAITING;\n\n    // Inheritors of `Asset` that can change state willy-nilly should set this to `true`.\n    this.can_move_backwards = false;\n  }\n\n  setState(state) {\n    if(this.state === state) {\n      return;\n    }\n    \n    Logger.info(`Asset '${this.name}' state is moving from '${this.state}' to '${state}'`);\n    \n    if(this.isDoneLoading() && !this.can_move_backwards) {\n      Logger.warn(`Asset '${this.name}' state is moving from '${this.state}' to '${state}', but it's already loaded.`);\n    }\n    \n    this.state = state;\n    \n    this.emit('statechange', {\n      previous: this.state,\n      state: state,\n      asset: this\n    });\n  }\n\n  isLoaded() {\n    return this.state === STATE.LOAD_COMPLETE;\n  }\n\n  isLoading() {\n    return this.state === STATE.LOADING;\n  }\n\n  // Returns `true` if this asset is either loaded or had an error while loading.\n  isDoneLoading() {\n    return this.isLoaded() || this.state === STATE.LOAD_ERROR;\n  }\n\n  // Returns the state of a hypothetical loader containing `assets`.\n  getCombinedState(assets) {\n    let state = STATE.LOAD_COMPLETE;\n\n    // If we have no assets, we're done.\n    if(assets.length === 0) {\n      return state;\n    }\n    \n    for(let asset of assets) {\n      if(asset.state === STATE.LOAD_ERROR) {\n        continue;\n      }\n      \n      state = Math.min(state, asset.state);\n    }\n    \n    return state;\n  }\n  \n}\n\n// # `Loader`\n//\n// Handles events for assets.\nexport default class Loader extends Asset {\n  \n  constructor(name) {\n    super(name);\n    \n    this.assets = {};\n\n    this.can_move_backwards = true;\n    \n    this.handleAssetStateChange = this.handleAssetStateChange.bind(this);\n  }\n\n  addAsset(name, asset) {\n    //this.emit('loaded', this);\n\n    this.assets[name] = asset;\n\n    asset.on('statechange', this.handleAssetStateChange);\n\n    this.updateState();\n  }\n\n  getAsset(name) {\n    return this.assets[name];\n  }\n\n  hasAsset(name) {\n    return name in this.assets;\n  }\n\n  // Returns the internal key-value list of all assets.\n  getAllAssets() {\n    return this.assets;\n  }\n\n  handleAssetStateChange(event) {\n    this.emit('childstatechange', {\n      previous: event.previous,\n      state: event.state,\n      asset: event.asset,\n      loader: this\n    });\n    \n    this.updateState();\n  }\n\n  updateState() {\n    this.setState(this.getCombinedState(Object.values(this.assets)));\n  }\n  \n}\n","\nimport Logger from 'js-logger';\n\nconst MAX_VERTICES_U16 = 65536;\n\nexport function flatten(array) {\n  let flat = [];\n  \n  for(let i=0; i<array.length; i++) {\n    if(typeof array[i] !== typeof 0) {\n      flat.push.apply(flat, flatten(array[i]));\n    } else {\n      flat.push(array[i]);\n    }\n  }\n\n  return flat;\n}\n\n// # `Buffer`\n// A buffer is a low-level buffer that manages multiple attributes\n// in one sequential array.\nexport class Buffer {\n\n  constructor(mesh, name, type) {\n    this.renderer = mesh.renderer;\n    \n    this.mesh = mesh;\n\n    this.name = name;\n\n    this.type = type;\n\n    // The linear array of data for this buffer.\n    this.data = [];\n\n    // The WebGL buffer.\n    this.buffer = null;\n\n    this.attributes = {};\n  }\n\n  // Add a named attribute.\n  addAttribute(name, options) {\n    const gl = this.renderer.context;\n    \n    options = {\n      // The offset, in bytes, to start at.\n      offset: 0,\n      \n      // The number of components per vertex. This is analagous to the number in `vec3`, `vec2`, etc.\n      size: 3,\n\n      // The value type.\n      type: gl.FLOAT,\n\n      // \n      normalized: false,\n      \n      // Bytes to skip between vertices.\n      stride: 0,\n      \n      ...options\n    };\n\n    this.attributes[name] = options;\n  }\n\n  apply() {\n    const gl = this.renderer.context;\n\n    Logger.debug(`Creating buffer '${this.mesh.name}.${this.name}'...`);\n    \n    if(this.buffer === null) {\n      this.buffer = gl.createBuffer();\n    }\n\n    this.bind();\n\n    gl.bufferData(this.type, this.data, gl.STATIC_DRAW);\n  }\n\n  // Binds this buffer if necessary.\n  bind() {\n    const gl = this.renderer.context;\n    \n    if(this.renderer.active.buffer === this) {\n      return;\n    }\n\n    this.renderer.active.buffer = this;\n\n    gl.bindBuffer(this.type, this.buffer);\n  }\n  \n  attachShader(shader) {\n    this.bind();\n    \n    const gl = this.renderer.context;\n    \n    for(let name of Object.keys(this.attributes)) {\n      let attrib = this.attributes[name];\n      let attribute_location = shader.getAttributeLocation(name);\n\n      if(attribute_location === -1) {\n        continue;\n      }\n      \n      gl.enableVertexAttribArray(attribute_location);\n      gl.vertexAttribPointer(attribute_location,\n                             attrib.size,\n                             gl.FLOAT,\n                             attrib.normalize,\n                             attrib.stride,\n                             attrib.offset);\n    }\n\n  }\n\n  // Returns `true` if this buffer can be used in WebGL, `false` otherwise.\n  isValid() {\n    return this.buffer !== null;\n  }\n\n  deinit() {\n    const gl = this.renderer.context;\n\n    if(gl === null) {\n      return;\n    }\n    \n    gl.deleteBuffer(this.buffer);\n  }\n\n}\n\n// # `Mesh`\n// Contains multiple buffers, along with names.\n//\n// Lifecycle:\n// ```\n// <constructor>\n// init() # This compiles the shaders and links the program. This function can throw errors.\n// ... assuming init() was successful, the shader can now be used (with `use()`).\n// deinit() # This deletes the shaders and programs. The shader is now invalid and cannot be used.\n//\n// ```\nexport default class Mesh {\n\n  constructor(renderer, name) {\n    this.renderer = renderer;\n\n    this.name = name;\n\n    // Buffers are keyed by their attribute name.\n    this.buffers = {};\n\n    this.ready = false;\n\n    this.vertex_count = 0;\n  }\n\n  createBuffer(name, type) {\n    if(name in this.buffers) {\n      Logger.warn(`Duplicate buffer '${name}' is being requested; deleting existing buffer.`);\n      this.buffers[name].deinit();\n    }\n\n    let buffer = new Buffer(this, name, type);\n    \n    this.buffers[name] = buffer;\n\n    return buffer;\n  }\n\n  // A helper function to create the buffers for a mesh.\n  // Layers is expected to be an object,\n  // containing attribute-keyed data and lists of attributes.\n  // ```\n  // {\n  //   \"aPosition\": [[0, 0, 0], [1, 0, 0], [0, 1, 0]],\n  //   \"aNormal\": [[0, 0, -1], [0, 0, -1], [0, 0, -1]]\n  // }\n  // ```\n  //\n  // **Triangles** contains a list of 3-item index lists.\n  //\n  // TODO: optimize this function to create one interleaved buffer instead.\n  createMesh(layers, triangles, options) {\n    const gl = this.renderer.context;\n    \n    if(options === undefined) {\n      options = {};\n    }\n    \n    for(let layer_name of Object.keys(layers)) {\n      let buffer = this.createBuffer(layer_name, gl.ARRAY_BUFFER);\n\n      buffer.data = new Float32Array(flatten(layers[layer_name]));\n\n      buffer.addAttribute(layer_name, {\n        offset: 0,\n        size: 3,\n        type: gl.FLOAT,\n        stride: 0,\n      });\n      \n      this.buffers[layer_name] = buffer;\n    }\n\n    let buffer = this.createBuffer('@triangles', gl.ELEMENT_ARRAY_BUFFER);\n    buffer.data = new Uint16Array(flatten(triangles));\n\n    this.vertex_count = buffer.data.length;\n    \n    if(this.vertex_count > MAX_VERTICES_U16) {\n      Logger.warn(`Mesh '${this.name}' has too many vertices (${this.vertex_count} > ${MAX_VERTICES_U16}). Expect unexpected issues.`);\n    }\n    \n    buffer.addAttribute('@triangles', {\n      offset: 0,\n      size: 3,\n      type: gl.UNSIGNED_INT,\n      stride: 0,\n    });\n    \n    this.buffers['@triangles'] = buffer;\n    this.apply();\n  }\n\n  // Initializes stuff and creates all the buffers.\n  init() {\n    //this.apply();\n  }\n\n  deinit() {\n    for(let buffer_name of Object.keys(this.buffers)) {\n      this.buffers[buffer_name].deinit();\n    }\n  }\n\n  isReady() {\n    return this.ready;\n  }\n  \n  apply() {\n    for(let buffer_name of Object.keys(this.buffers)) {\n      this.buffers[buffer_name].apply();\n    }\n    \n    this.ready = true;\n  }\n\n  draw(shader) {\n    const gl = this.renderer.context;\n\n    if(this.vertex_count < 2) {\n      return;\n    }\n\n    for(let buffer_name of Object.keys(this.buffers)) {\n      if(buffer_name.startsWith('@')) {\n        continue;\n      }\n      \n      this.buffers[buffer_name].attachShader(shader);\n    }\n\n    //gl.drawArrays(gl.TRIANGLE_STRIP, 0, 3);\n\n    this.buffers['@triangles'].bind();\n    gl.drawElements(gl.TRIANGLES, this.vertex_count, gl.UNSIGNED_SHORT, 0);\n    //gl.drawElements(gl.LINES, this.vertex_count, gl.UNSIGNED_SHORT, 0);\n  }\n}\n\n","\nimport {vec4} from 'gl-matrix';\n\nimport {TYPE} from './shader.js';\nimport {flatten} from './mesh.js';\nimport {Asset, STATE} from './loader.js';\nimport Logger from 'js-logger';\n\nexport const WRAP = {\n  REPEAT: 0x2901,\n  CLAMP_TO_EDGE: 0x812F,\n  MIRRORED_REPEAT: 0x8370,\n};\n\nexport const FILTER = {\n  NEAREST: 0x2600,\n  LINEAR: 0x2601,\n  NEAREST_MIPMAP_NEAREST: 0x2700,\n  LINEAR_MIPMAP_NEAREST: 0x2701,\n  NEAREST_MIPMAP_LINEAR: 0x2702,\n  LINEAR_MIPMAP_LINEAR: 0x2703,\n}\n\n// # `Texture`\n//\n// A single texture.\n// TODO: needs huge cleanups for better support.\nexport default class Texture extends Asset {\n\n  constructor(renderer, name, parameters) {\n    super(name);\n\n    if(!parameters) {\n      parameters = {};\n    }\n    \n    this.renderer = renderer;\n\n    this.type = null;\n    \n    // HTML image(s)\n    this.image = null;\n\n    // WebGL texture ID.\n    this.texture = null;\n\n    this.parameters = {\n      min_filter: FILTER.LINEAR_MIPMAP_LINEAR,\n      mag_filter: FILTER.LINEAR,\n      wrap: [WRAP.REPEAT, WRAP.REPEAT],\n      anisotropy_level: 0,\n      ...parameters\n    };\n  }\n\n  isReady() {\n    return this.isLoaded();\n  }\n\n  init() {\n    const gl = this.renderer.context;\n    \n    this.texture = gl.createTexture();\n    //this._setFromColor(vec4.fromValues(1, 0, 1, 1));\n  }\n  \n  setFromColorInit(type) {\n    this.type = type;\n    this.setState(STATE.LOADING);\n    \n    const gl = this.renderer.context;\n    gl.bindTexture(this.type, this.texture);\n  }\n  \n  // `Color` is a vec4 with RGBA.\n  setFromColor(color) {\n    this.setFromColorInit(TYPE.TEXTURE_2D);\n    \n    const gl = this.renderer.context;\n    \n    const format = gl.RGBA;\n    \n    const width = 1;\n    const height = 1;\n\n    vec4.scale(color, color, 255);\n    \n    const data = new Uint8Array(color);\n\n    let type = this.getGLTextureType();\n    \n    gl.bindTexture(type, this.texture);\n    gl.texImage2D(type, 0, format, width, height, 0, format, gl.UNSIGNED_BYTE, data);\n    \n    this.setState(STATE.LOAD_COMPLETE);\n  }\n\n  createCheckerData(colora, colorb, size, cell_size) {\n    vec4.scale(colora, colora, 255);\n    vec4.scale(colorb, colorb, 255);\n\n    let data = [];\n    \n    for(let i=0; i<size*size; i++) {\n      let x = i % size;\n      let y = Math.floor(i / size);\n\n      var x_cell = Math.floor(x / (size / cell_size));\n      var y_cell = Math.floor(y / (size / cell_size));\n\n      if((x_cell + y_cell) % 2 === 0) {\n        data.push(colora);\n      } else {\n        data.push(colorb);\n      }\n    }\n\n    return flatten(data);\n  }\n  \n  setCheckerFromColor(colora, colorb, size, checkers) {\n    this.setFromColorInit(TYPE.TEXTURE_2D);\n    \n    const gl = this.renderer.context;\n    \n    const format = gl.RGBA;\n    \n    const width = 1;\n    const height = 1;\n\n    let type = this.getGLTextureType();\n    \n    gl.bindTexture(type, this.texture);\n    gl.texImage2D(type, 0, format, width, height, 0, format, gl.UNSIGNED_BYTE, new Uint8Array(this.createCheckerData(colora, colorb, size, checkers)));\n    \n    this.setState(STATE.LOAD_COMPLETE);\n  }\n\n  setFromColorCubemap(color) {\n    this.setFromColorInit(TYPE.TEXTURE_CUBE_MAP);\n    \n    const gl = this.renderer.context;\n    \n    vec4.scale(color, color, 255);\n    \n    const data = new Uint8Array(color);\n\n    let type = this.getGLTextureType();\n    \n    const targets = [\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n\n    targets.forEach((target, index) => {\n      const format = gl.RGB;\n      const type = gl.UNSIGNED_BYTE;\n      \n      gl.texImage2D(target, 0, format, 1, 1, 0, format, type, data);\n    });\n    \n    this.setState(STATE.LOAD_COMPLETE);\n  }\n\n  setFromCheckerCubemap(colora, colorb, size, cell_size) {\n    this.setFromColorInit(TYPE.TEXTURE_CUBE_MAP);\n    \n    const gl = this.renderer.context;\n    \n    const data = new Uint8Array(this.createCheckerData(colora, colorb, size, cell_size));\n\n    let type = this.getGLTextureType();\n    \n    const targets = [\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n\n    targets.forEach((target, index) => {\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n\n      gl.texImage2D(target, 0, format, size, size, 0, format, type, data);\n    });\n    \n    gl.generateMipmap(type);\n    \n    gl.texParameteri(type, gl.TEXTURE_WRAP_S, this.parameters.wrap[0]);\n    gl.texParameteri(type, gl.TEXTURE_WRAP_T, this.parameters.wrap[1]);\n    \n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    this.setState(STATE.LOAD_COMPLETE);\n  }\n\n  getGLTextureType() {\n    return this.type;\n  }\n\n  deinit() {\n    const gl = this.renderer.context;\n\n    gl.deleteTexture(this.texture);\n  }\n\n  load(url) {\n    if(this.type !== null) {\n      Logger.warn(`Texture '${this.name}' already has an image assigned, skipping download of '${url}'.`);\n      return;\n    }\n    \n    Logger.info(`Fetching image '${url}' for texture '${this.name}'.`);\n\n    this.type = TYPE.TEXTURE_2D;\n    \n    this.setState(STATE.LOADING);\n    \n    this.image = new Image();\n    this.image.onload = this.handleImageLoad.bind(this);\n    this.image.onerror = this.handleImageError.bind(this);\n    this.image.src = url;\n\n    return this;\n  }\n\n  loadCubemap(url) {\n    if(typeof url !== typeof '') {\n      Logger.warn(`loadCubemap() must be called with a string URL (at the moment)`);\n    }\n\n    if(this.type !== null) {\n      Logger.warn(`Texture '${this.name}' already has an image assigned, skipping download of '${url}'.`);\n      return;\n    }\n    \n    let urls = [];\n\n    for(let i=0; i<6; i++) {\n      urls.push(url.replace('{id}', i.toString().padStart(4, '0')));\n    }\n\n    this.loadCubemapFacesFromURL(urls);\n\n    return this;\n  }\n\n  // Given a list of image URLs, load all of them.\n  loadCubemapFacesFromURL(urls) {\n    this.type = TYPE.TEXTURE_CUBE_MAP;\n    \n    this.setState(STATE.LOADING);\n    \n    this.images = [];\n\n    this.images = urls.map((url, index) => {\n      Logger.info(`Fetching image '${url}' for cubemap '${this.name}'.`);\n      \n      let image = new Image();\n      \n      image.onload = () => {\n        this.handleCubemapImageLoad(index);\n      };\n      \n      image.onerror = this.handleImageError.bind(this);\n      image.src = url;\n\n      return {\n        image: image,\n        loaded: false,\n        index: index\n      };\n    });\n  }\n\n  setParameters(parameters) {\n    this.parameters = {\n      ...this.parameters,\n      ...parameters\n    };\n\n    this.applyParameters();\n\n    return this;\n  }\n\n  // Assigns the image to WebGL.\n  assignImage() {\n    const gl = this.renderer.context;\n    const type = this.getGLTextureType();\n    \n    gl.bindTexture(type, this.texture);\n    \n    if(this.type === TYPE.TEXTURE_CUBE_MAP) {\n      this.assignCubemap();\n    } else {\n      this.assign2D();\n    }\n\n    gl.generateMipmap(type);\n    \n    this.applyParameters();\n  }\n\n  assign2D() {\n    const gl = this.renderer.context;\n    const type = this.getGLTextureType();\n    \n    const format = gl.RGB;\n    const srcType = gl.UNSIGNED_BYTE;\n\n    gl.texImage2D(type, 0, format, format, srcType, this.image);\n  }\n\n  assignCubemap() {\n    Logger.info(`Assigning image '${this.name}' to WebGL cubemap texture.`);\n    \n    const gl = this.renderer.context;\n    \n    const targets = [\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n\n    this.images.forEach((info) => {\n      const level = 0;\n      const format = gl.RGB;\n      const type = gl.UNSIGNED_BYTE;\n      \n      gl.texImage2D(targets[info.index], 0, format, format, type, info.image);\n    });\n  }\n\n  applyParameters() {\n    const gl = this.renderer.context;\n    const type = this.getGLTextureType();\n\n    gl.bindTexture(type, this.texture);\n    \n    gl.texParameteri(type, gl.TEXTURE_WRAP_S, this.parameters.wrap[0]);\n    gl.texParameteri(type, gl.TEXTURE_WRAP_T, this.parameters.wrap[1]);\n    \n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, this.parameters.min_filter);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, this.parameters.mag_filter);\n\n    if(this.parameters.anisotropy_level) {\n      this.applyParameterAnisotropy();\n    }\n  }\n\n  applyParameterAnisotropy() {\n    const gl = this.renderer.context;\n    const type = this.getGLTextureType();\n    \n    let aniso_ext = this.renderer.getExtension('EXT_texture_filter_anisotropic');\n\n    if(!aniso_ext) {\n      return;\n    }\n\n    let level = Math.min(\n      this.parameters.anisotropy_level,\n      (this.renderer.options.max_anisotropy_level === undefined ? 32 : this.renderer.options.max_anisotropy_level),\n      aniso_ext.max,\n    );\n\n    //Logger.debug(`Setting anisotropy level to '${level}' for '${this.name}'`);\n\n    gl.texParameterf(type, aniso_ext.ext.TEXTURE_MAX_ANISOTROPY_EXT, Math.max(level, 1));\n  };\n\n  bind() {\n    this.applyParameters();\n  }\n\n  handleImageLoad() {\n    this.assignImage();\n\n    this.setState(STATE.LOAD_COMPLETE);\n  }\n  \n  handleCubemapImageLoad(index) {\n    this.images[index].loaded = true;\n    \n    for(let image of this.images) {\n      if(!image.loaded) {\n        return;\n      }\n    }\n\n    if(this.state === STATE.LOAD_ERROR) {\n      return;\n    }\n    \n    this.assignImage();\n\n    this.setState(STATE.LOAD_COMPLETE);\n  }\n\n  handleImageError(e) {\n    Logger.warn(`Image '${e.target.src}' could not be fetched.`, e);\n    \n    this.setState(STATE.LOAD_ERROR);\n  }\n}\n","\n//import Logger from 'js-logger';\n\nimport {Uniforms} from './shader.js';\n\nexport const BLEND = {\n  OPAQUE: 0,\n  ADD: 1\n};\n\nexport const DEPTH = {\n  IGNORE: 0,\n  READ_ONLY: 1,\n  READ_WRITE: 2,\n};\n\nlet current_material_index = 0;\n\nexport default class Material {\n\n  constructor(scene, shader_name) {\n    this.scene = scene;\n    \n    this.shader_name = shader_name;\n\n    this.uniforms = new Uniforms(this.flagDirty.bind(this));\n    \n    this.blend_mode = BLEND.OPAQUE;\n    this.depth_mode = DEPTH.READ_WRITE;\n    \n    this.index = current_material_index++;\n  }\n\n  flagDirty() {\n    this.scene.flagDirty();\n  }\n\n  set(name, value) {\n    this.uniforms.set(name, value);\n  }\n\n}\n","\nimport debounce from 'debounce';\n\nimport Logger from 'js-logger';\n\nimport {vec2, vec4} from 'gl-matrix';\n\nimport Loader, {Asset, STATE} from './loader.js';\nimport Shader from './shader.js';\nimport Mesh from './mesh.js';\nimport Texture from './texture.js';\n\nimport {BLEND, DEPTH} from './material.js';\n\nimport fallback_vert from './fallback.vert';\nimport fallback_frag from './fallback.frag';\n\n// A WebGL 1 renderer.\nexport default class Renderer extends Asset {\n\n  constructor(canvas, options) {\n    super('@renderer');\n\n    // Set up the asset loader to allow our state to change at will.\n    this.can_move_backwards = true;\n    \n    this.canvas = canvas;\n\n    // Set to `true` to disable rendering except when resizing.\n    this.paused = false;\n\n    // This is set when the renderer needs to re-render.\n    this.render_required = false;\n    \n    this.options = {\n      max_anisotropy_level: 16,\n      scale: 1,\n      ...(options ? options : {})\n    };\n    \n    this.context = null;\n\n    // The size of the canvas.\n    this.size = [1, 1];\n\n    // The DPI for this canvas.\n    this.dpi = 1;\n\n    // Call `flagDirty()` to force a render on the next frame.\n    this._dirty = false;\n\n    // Each key points to the currently active thing, or `null`.\n    // This can be used to avoid re-activating an already-active GL object.\n    this.active = {\n      shader: null,\n      buffer: null,\n      blend_mode: null,\n      depth_mode: null,\n    };\n\n    this.performance = {\n      vertex_count: 0,\n      draw_call_count: 0,\n      fps: 0,\n      frametime_samples: 0,\n      frametime_total: 0,\n      frame_start: 0,\n\n      current_frame: 0,\n    };\n\n    // A key-value object containing the normalized extension name.\n    this.extensions = {};\n\n    // Contains all the shaders we can use, keyed by their name.\n    // A shader is not valid just because it is in this list; make sure\n    // to check `shader.isReady()` first.\n    this.shaders = {};\n    \n    // Contains all the meshes.\n    this.meshes = {};\n\n    // Contains all the textures.\n    this.textures = new Loader('@texture-loader');\n\n    // The scene to render.\n    this.scene = null;\n\n    this.initDebounce = debounce(this.init.bind(this), 150, true);\n    this.resizeDebounce = debounce(this.resizeImmediate.bind(this), 50);\n\n    // To avoid horrific error spam in the console. This should theoretically never happen.\n    this.terminate_rendering = false;\n\n    this.handleLoaderStateChange = this.handleLoaderStateChange.bind(this);\n    this.handleLoaderChildStateChange = this.handleLoaderChildStateChange.bind(this);\n  }\n\n  init() {\n    Logger.debug(\"Initializing WebGL renderer...\");\n    \n    this.setState(STATE.LOADING);\n\n    const VALID_WEBGL_OPTIONS = [\n      'alpha',\n      'desynchronized',\n      'antialias',\n      'depth',\n      'failIfMajorPerformanceCaveat',\n      'powerPreference',\n      'premultipliedAlpha',\n      'preserveDrawingBuffer',\n      'stencil'\n    ];\n    \n    let webgl_options = {};\n\n    for(let option_key of Object.keys(this.options)) {\n      if(option_key in VALID_WEBGL_OPTIONS) {\n        webgl_options[option_key] = this.options[option_key];\n      }\n    }\n\n    try {\n      this.context = this.canvas.getContext('webgl', {\n        alpha: false,\n        ...webgl_options\n      });\n    } catch(e) {\n      Logger.error(\"An error was thrown while creating WebGL 1 context!\", e);\n      throw new Error('webgl-context-create-error');\n    }\n\n    if(this.context === null) {\n      Logger.error(\"WebGL context is null!\");\n      throw new Error('webgl-context-create-error');\n    }\n\n    this.canvas.addEventListener('webglcontextlost', (event) => {\n      event.preventDefault();\n      this.context = null;\n      this.deinit();\n      this.initDebounce();\n    }, false);\n\n    this.initExtensions();\n\n    this.initShaders();\n    this.initMeshes();\n    this.initTextures();\n\n    this.initCanvas();\n\n    this.create();\n\n    this.textures.on('statechange', this.handleLoaderStateChange);\n    this.textures.on('childstatechange', this.handleLoaderChildStateChange);\n    this.handleLoaderStateChange();\n\n    // And kick off the first frame.\n    requestAnimationFrame(this.render.bind(this));\n  }\n\n  handleLoaderStateChange() {\n    this.setState(this.getCombinedState([\n      this.textures\n    ]));\n\n    if(this.isLoaded()) {\n      Logger.info(`All initial assets for this renderer are loaded.`);\n    }\n  }\n\n  handleLoaderChildStateChange() {\n    this.flagDirty();\n  }\n\n  create() {\n    // Anybody inheriting `Renderer` should do all of their initialization here.\n  }\n\n  // Set an option on this renderer.\n  setOption(name, value) {\n    if(this.options[name] === value) {\n      return;\n    }\n    \n    this.options[name] = value;\n\n    this.flagDirty();\n\n    this.applyOptions();\n  }\n\n  applyOptions() {\n    this.resize();\n    this.applyTextureParameters();\n  }\n\n  applyTextureParameters() {\n    for(let texture of Object.values(this.textures.getAllAssets())) {\n      texture.applyParameters();\n    }\n  }\n\n  initExtensions() {\n    const gl = this.context;\n    \n    let aniso_ext = this.getExtension('EXT_texture_filter_anisotropic', 'MOZ_EXT_texture_filter_anisotropic', 'WEBKIT_EXT_texture_filter_anisotropic');\n\n    if(aniso_ext) {\n      aniso_ext.max = gl.getParameter(aniso_ext.ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    }\n  }\n\n  getExtension(name) {\n    if(!(name in this.extensions)) {\n      const gl = this.context;\n\n      this.extensions[name] = null;\n      \n      for(let i=0; i<arguments.length; i++) {\n        let extension = gl.getExtension(arguments[i]);\n\n        if(extension !== null) {\n          this.extensions[name] = {\n            ext: extension\n          };\n          \n          break;\n        }\n      }\n    }\n    \n    return this.extensions[name];\n  }\n\n  // Initialize default shaders.\n  initShaders() {\n    this.createShader('@fallback', fallback_vert, fallback_frag);\n  }\n\n  // Initialize default meshes.\n  initMeshes() {\n    let triangle = this.createMesh('@triangle');\n    triangle.createMesh({\n      aPosition: [\n        [-0.5, -0.5, 0],\n        [   0,  0.5, 0],\n        [ 0.5, -0.5, 0],\n      ]\n    }, [\n      [0, 1, 2]\n    ]);\n    \n    let square = this.createMesh('@square');\n    square.createMesh({\n      aPosition: [\n        [-0.5, -0.5, 0],\n        [-0.5,  0.5, 0],\n        [ 0.5,  0.5, 0],\n        [ 0.5, -0.5, 0],\n      ]\n    }, [\n      [0, 1, 2],\n      [2, 0, 3]\n    ]);\n  }\n\n  initTextures() {\n    this.createTexture('@fallback').setFromColor(vec4.fromValues(0.0, 1.0, 1.0, 1.0));\n    this.createTexture('@fallback-cube').setFromCheckerCubemap(vec4.fromValues(0.0, 1.0, 1.0, 1.0), vec4.fromValues(0.0, 0.0, 0.0, 1.0), 64, 8);\n  }\n\n  initCanvas() {\n    // Match our parent element's size.\n    this.resizeImmediate();\n\n    // Set up the clear color.\n    let gl = this.context;\n    gl.clearColor(0.0, 0.3, 0.0, 1.0);\n    \n    gl.clearDepth(1.0);\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n\n    gl.enable(gl.CULL_FACE);\n    gl.cullFace(gl.BACK);\n  }\n\n  // Call this function when the canvas is ready to be destroyed.\n  deinit() {\n    Logger.debug(`Deinitializing renderer...`);\n\n    for(let name of Object.keys(this.shaders)) {\n      this.shaders[name].deinit();\n    }\n\n    this.shaders = {};\n    \n    for(let name of Object.keys(this.meshes)) {\n      this.meshes[name].deinit();\n    }\n\n    this.meshes = {};\n  }\n\n  createShader(name, vertex_source, fragment_source) {\n    if(name in this.shaders) {\n      Logger.warn(`Duplicate shader '${name}' is being requested; deleting existing shader.`);\n      this.shaders[name].deinit();\n    }\n    \n    Logger.debug(`Creating shader '${name}'...`);\n    \n    let shader = new Shader(this, name, vertex_source, fragment_source);\n\n    shader.init();\n\n    this.shaders[name] = shader;\n\n    return shader;\n  }\n\n  getShader(name) {\n    if(name in this.shaders && this.shaders[name].isReady()) {\n      return this.shaders[name];\n    }\n\n    Logger.warn(`No such shader '${name}'`);\n\n    return this.shaders['@fallback'];\n  }\n\n  createMesh(name) {\n    if(name in this.meshes) {\n      Logger.warn(`Duplicate mesh '${name}' is being requested; deleting existing mesh.`);\n      this.meshes[name].deinit();\n    }\n    \n    Logger.debug(`Creating mesh '${name}'...`);\n    \n    let mesh = new Mesh(this, name);\n\n    this.meshes[name] = mesh;\n\n    return mesh;\n  }\n\n  getMesh(name) {\n    if(name in this.meshes && this.meshes[name].isReady()) {\n      return this.meshes[name];\n    }\n\n    Logger.warn(`No such mesh '${name}'`);\n\n    return this.meshes['@triangle'];\n  }\n\n  createTexture(name) {\n    if(name in this.textures) {\n      Logger.warn(`Duplicate texture '${name}' is being requested; deleting existing texture.`);\n      this.textures[name].deinit();\n    }\n    \n    Logger.debug(`Creating texture '${name}'...`);\n    \n    let texture = new Texture(this, name);\n    texture.init();\n\n    this.textures.addAsset(name, texture);\n\n    return texture;\n  }\n  \n  getTexture(name) {\n    if(this.textures.hasAsset(name)) {\n      if(this.textures.getAsset(name).isReady()) {\n        return this.textures.getAsset(name);\n      }\n    } else {\n      //Logger.warn(`No such texture '${name}'`);\n    }\n\n    return this.textures.getAsset('@fallback');\n  }\n\n  // Automatically copies the size from the parent element of the canvas.\n  resizeImmediate() {\n    this.size = vec2.fromValues(this.canvas.parentElement.clientWidth, this.canvas.parentElement.clientHeight);\n    this.dpi = window.devicePixelRatio;\n\n    this.canvas.style.width = '100%';\n    this.canvas.style.height = '100%';\n\n    vec2.scale(this.size, this.size, this.options.scale);\n\n    this.canvas.width = this.size[0] * this.dpi;\n    this.canvas.height = this.size[1] * this.dpi;\n\n    this.flagDirty();\n    this.render_required = true;\n    \n    Logger.debug(`Resizing renderer to ${this.size} @ ${this.dpi}x`);\n  }\n\n  resize() {\n    this.resizeDebounce();\n  }\n\n  flagDirty() {\n    this._dirty = true;\n  }\n\n  setBlendMode(blend_mode) {\n    const gl = this.context;\n\n    if(this.active.blend_mode === blend_mode) {\n      return;\n    }\n\n    this.active.blend_mode = blend_mode;\n    \n    switch(blend_mode) {\n    case BLEND.OPAQUE:\n      //Logger.debug('Switching to blend mode OPAQUE');\n      gl.blendFunc(gl.ONE, gl.ZERO);\n      break;\n    case BLEND.ADD:\n      //Logger.debug('Switching to blend mode ADD');\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n      break;\n    default:\n      Logger.warn(`Invalid blend mode '${blend_mode}'`);\n    }\n  }\n\n  setDepthMode(depth_mode) {\n    const gl = this.context;\n\n    if(this.active.depth_mode === depth_mode) {\n      return;\n    }\n\n    this.active.depth_mode = depth_mode;\n    \n    switch(depth_mode) {\n    case DEPTH.IGNORE:\n      //Logger.debug('Switching to depth mode IGNORE');\n      gl.disable(gl.DEPTH_TEST);\n      gl.depthMask(false);\n      break;\n    case DEPTH.READ_ONLY:\n      //Logger.debug('Switching to depth mode READ_ONLY');\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(false);\n      break;\n    case DEPTH.READ_WRITE:\n      //Logger.debug('Switching to depth mode READ_WRITE');\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      break;\n    default:\n      Logger.warn(`Invalid depth mode '${depth_mode}'`);\n    }\n  }\n\n  // If we should render this frame or not.\n  shouldRender() {\n    // If we don't need to re-render, then don't.\n    if(!this._dirty && !this.render_required) {\n      if(!(this.scene && this.scene._dirty)) {\n        this.performance.frame_start = -1;\n        return false;\n      }\n    }\n\n    if(this.paused && !this.render_required) {\n      return false;\n    }\n\n    // Only defer rendering when we're not loaded if we haven't rendered yet.\n    if(!this.isLoaded() && this.performance.current_frame <= 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // The primary render function. This handles everything about rendering, from start to finish.\n  render() {\n    // If we've been deinitialized, bail out.\n    if(this.context === null || this.terminate_rendering) {\n      return false;\n    }\n\n    requestAnimationFrame(this.render.bind(this));\n\n    try {\n      if(this.scene !== null) {\n        this.scene.update(this);\n      }\n\n      if(!this.shouldRender()) {\n        return false;\n      }\n      \n      this._dirty = false;\n      this.render_required = false;\n      \n      let gl = this.context;\n      \n      this.setBlendMode(BLEND.OPAQUE);\n      this.setDepthMode(DEPTH.READ_WRITE);\n      \n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n      gl.viewport(0, 0, this.size[0] * this.dpi, this.size[1] * this.dpi);\n\n      this.performance.vertex_count = 0;\n      this.performance.draw_call_count = 0;\n      \n      if(this.scene !== null) {\n        this.scene.draw(this);\n      } else {\n        Logger.warn(`No scene to draw, skipping...`);\n      }\n      \n      let end = Date.now() / 1000;\n\n      if(this.performance.frame_start > 0) {\n        this.performance.frametime_total += end - this.performance.frame_start;\n        this.performance.frametime_samples += 1;\n        \n        if(this.performance.frametime_samples > 8) {\n          this.performance.fps = this.performance.frametime_samples / this.performance.frametime_total;\n\n          this.performance.frametime_total = 0;\n          this.performance.frametime_samples = 0;\n        }\n      }\n\n      this.performance.frame_start = end;\n      \n      this.performance.current_frame += 1;\n\n      return true;\n    } catch(e) {\n      this.terminate_rendering = true;\n      throw e;\n    }\n  }\n\n}\n\nexport {\n  Shader\n};\n","export default \"\\nattribute vec3 aPosition;\\n//attribute vec3 aNormal;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uProjectionMatrix;\\n\\nvoid main() {\\n  gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(aPosition, 1.0);\\n}\\n\";","export default \"precision mediump float;\\n\\nvoid main() {\\n  gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\\n}\\n\";","\nimport {vec3, quat, mat4} from 'gl-matrix';\n\nimport Logger from 'js-logger';\nimport {Uniforms} from './shader.js';\nimport {RENDER_ORDER} from './scene.js';\nimport {BLEND, DEPTH} from './material.js';\n\n// # `SpatialData`\n//\n// Contains extra information and functions for `Spatial` objects.\nexport class SpatialData {\n\n  constructor() {\n    this.scene = null;\n\n    // Specifies the order to draw this in.\n    this.order = RENDER_ORDER.AUTO;\n  }\n\n  flagDirty() {\n    if(this.scene) {\n      this.scene.flagDirty();\n    } else {\n      Logger.warn(`flagDirty() being called for SpatialData, but no scene is bound!`);\n    }\n  }\n\n  update(renderer, spatial) {\n    //\n  }\n\n  getRenderSort(spatial) {\n    return 0;\n  }\n\n  /*\n  draw(renderer, spatial) {\n\n  }\n  */\n  \n}\n\nexport class MeshData extends SpatialData {\n\n  constructor(mesh_name, material) {\n    super();\n\n    this.mesh_name = mesh_name;\n    this.material = material;\n\n    this.uniforms = new Uniforms(this.flagDirty.bind(this));\n  }\n\n  getMaterial(spatial) {\n    return this.material || (spatial ? spatial.scene.fallback_material : null);\n  }\n\n  getRenderSort(spatial) {\n    let sort = 0;\n    \n    let shift = (start, width, value) => {\n      if(start > Math.pow(width)) {\n        Logger.error(`Cannot shift '${value}' for render sort order; would cause overflow within '${width}'`);\n        return 0;\n      }\n      \n      return Math.floor(value) << (start - width);\n    };\n\n    // The render sort order is 32 bits, and is partitioned as follows:\n    //\n    // ```\n    // |-------|-------|-------|-------\n    // 12345678901234567890123456789012\n    //  | order |  mat  |     depth\n    // ```\n    //\n    // If the material is marked as a non-opaque blend mode, the order is instead:\n    //\n    // ```\n    // |-------|-------|-------|-------\n    // 12345678901234567890123456789012\n    //  | order | depth        |  mat\n    // ```\n\n    let material = this.getMaterial(spatial);\n    let camera = spatial.scene.camera.getData(CameraData);\n\n    let depth = Math.pow(Math.min(Math.max((-spatial.modelview_matrix[4 * 3 + 2] - camera.near) / (camera.far - camera.near), 0), 1), 0.2) * Math.pow(2, 15);\n\n    sort |= shift(31, 8, this.order);\n\n    if(spatial.order >= RENDER_ORDER.TRANSPARENT) {\n      sort |= shift(24, 15, depth);\n      sort |= shift(8, 8, material.index);\n    } else {\n      sort |= shift(24, 8, material.index);\n      sort |= shift(16, 15, depth);\n    }\n\n    return sort;\n  }\n\n  draw(renderer, spatial) {\n    //super.draw(renderer, spatial);\n    \n\n    //Logger.debug(`Drawing mesh for '${spatial.name}'`);\n\n    let material = this.getMaterial(spatial);\n    \n    let mesh = renderer.getMesh(this.mesh_name);\n    let shader = renderer.getShader(this.material.shader_name);\n\n    if(!mesh) {\n      Logger.warn(`MeshInstance for '${spatial.name}' points to non-existent mesh '${this.mesh_name}'`);\n      return;\n    }\n    \n    if(!shader) {\n      Logger.warn(`MeshInstance for '${spatial.name}' uses material '${material.name}' that uses non-existent shader '${material.shader_name}'`);\n      return;\n    }\n    \n    let uniforms = {\n      ...spatial.scene.uniforms.get(),\n      ...material.uniforms.get(),\n      ...(spatial.scene.camera ? spatial.scene.camera.getData(CameraData).uniforms.get() : {}),\n      ...spatial.uniforms.get(),\n      ...this.uniforms.get(),\n    };\n\n    shader.use();\n    shader.setUniforms(uniforms);\n\n    renderer.performance.draw_call_count += 1;\n    renderer.performance.vertex_count += mesh.vertex_count;\n\n    renderer.setBlendMode(material.blend_mode);\n    renderer.setDepthMode(material.depth_mode);\n\n    //Logger.debug(`Drawing object '${spatial.name}'`);\n    mesh.draw(shader);\n  }\n  \n  set(name, value) {\n    this.uniforms.set(name, value);\n  }\n\n}\n\n\nexport class CameraData extends SpatialData {\n\n  constructor(fov, near, far) {\n    super();\n\n    this.fov = fov;\n    this.near = near;\n    this.far = far;\n\n    this.projection_matrix = mat4.create();\n    \n    this.uniforms = new Uniforms(this.flagDirty.bind(this));\n  }\n\n  update(renderer, spatial) {\n    super.update(renderer, spatial);\n    \n    // Transforms from world space to view space.\n    this.uniforms.set('uViewMatrix', spatial.world_matrix_inverse);\n    \n    // Transforms from view space to world space.\n    this.uniforms.set('uViewMatrix_i', spatial.world_matrix);\n    \n    mat4.perspective(this.projection_matrix, this.fov * (Math.PI/180), renderer.size[0] / renderer.size[1], this.near, this.far);\n    //mat4.ortho(this.projection_matrix, -10, 10, -10, 10, -10, 10);\n\n    this.uniforms.set('uProjectionMatrix', this.projection_matrix);\n    \n    this.uniforms.set('uCameraData', [this.near, this.far, 0, 0]);\n  }\n\n}\n\n// # `Spatial`\n//\n// The `Spatial` class represents an object in 3D space, optionally with a mesh attached.\nexport default class Spatial {\n\n  constructor(scene, name) {\n    // The following variables are all in local space.\n    this.position = vec3.create();\n    this.rotation = quat.create();\n    this.scale = vec3.fromValues(1, 1, 1);\n\n    this.world_matrix = mat4.create();\n    this.world_matrix_inverse = mat4.create();\n    this.modelview_matrix = mat4.create();\n    \n    this.scene = scene;\n\n    // Set to false to hide this spatial object and all its children.\n    this.enabled = true;\n    \n    this.name = name;\n\n    this.parent = null;\n    this.children = [];\n\n    this.render_sort = 0;\n    \n    // A `SpatialData` object that can be called upon to perform tasks during update and draw functions.\n    this._data = null;\n\n    this.uniforms = new Uniforms(this.flagDirty.bind(this));\n  }\n\n  flagDirty() {\n    if(!this.enabled) {\n      return;\n    }\n    \n    if(this.parent === null) {\n      this.scene.flagDirty();\n    } else {\n      this.parent.flagDirty();\n    }\n  }\n\n  // Called before drawing; this function updates the scene tree.\n  update(renderer) {\n    if(!this.enabled) {\n      return;\n    }\n    \n    this.callData('update', renderer, this);\n\n    this.updateMatrices();\n    \n    for(let child of this.children) {\n      child.update(renderer);\n    }\n\n  }\n\n  updateRenderSort() {\n    if(this._data) {\n      this.render_sort = this._data.getRenderSort(this);\n    }\n  }\n\n  updateMatrices() {\n    mat4.fromRotationTranslationScale(this.world_matrix, this.rotation, this.position, this.scale);\n\n    if(this.parent !== null) {\n      mat4.multiply(this.world_matrix, this.parent.world_matrix, this.world_matrix);\n    }\n    \n    if(this.scene.camera !== null) {\n      mat4.multiply(this.modelview_matrix, this.scene.camera.world_matrix_inverse, this.world_matrix);\n    }\n\n    mat4.invert(this.world_matrix_inverse, this.world_matrix);\n  }\n\n  // Called before drawing; this function updates the scene tree.\n  updatePost(renderer) {\n    if(!this.enabled) {\n      return;\n    }\n    \n    this.updateMatrices();\n    this.updateRenderSort();\n    this.updateUniforms();\n    \n    for(let child of this.children) {\n      child.updatePost(renderer);\n    }\n\n  }\n\n  updateUniforms() {\n    this.uniforms.set('uWorldMatrix', this.world_matrix);\n    this.uniforms.set('uWorldMatrix_i', this.world_matrix_inverse);\n    this.uniforms.set('uModelViewMatrix', this.modelview_matrix);\n  }\n\n  getRenderables() {\n    let renderables = [];\n\n    if(this.hasDataFunction('draw') && this.enabled) {\n      renderables.push(this);\n    }\n\n    for(let child of this.children) {\n      renderables.push.apply(renderables, child.getRenderables());\n    }\n\n    return renderables;\n  }\n\n  draw(renderer, recursive) {\n    if(!this.enabled) {\n      return;\n    }\n\n    this.callData('draw', renderer, this);\n\n    if(recursive) {\n      for(let child of this.children) {\n        child.draw(renderer, recursive);\n      }\n    }\n  }\n\n  setUniform(name, value) {\n    this.uniforms.set(name, value);\n  }\n\n  setEnabled(enabled) {\n    if(this.enabled === enabled) {\n      return;\n    }\n\n    this.enabled = enabled;\n\n    this.flagDirty();\n  }\n\n  setData(data) {\n    if(data.scene && data.scene !== this.scene) {\n      Logger.warn(`Object data for object '${this.name}' cannot be shared across different scenes; reassigning...`);\n    }\n    \n    data.scene = this.scene;\n\n    this._data = data;\n  }\n\n  getData(type) {\n    if(this._data instanceof type) {\n      return this._data;\n    }\n\n    return this._data;\n  }\n\n  callData(method) {\n    if(!this._data) {\n      return;\n    }\n\n    if(method in this._data) {\n      this._data[method].apply(this._data, Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  \n  hasDataFunction(method) {\n    if(!this._data) {\n      return;\n    }\n\n    if(method in this._data) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Adds a child.\n  add(child) {\n    Logger.debug(`Adding spatial object '${child.name}' to parent '${this.name}'`);\n    this.children.push(child);\n\n    if(child.parent !== null) {\n      child.parent.remove(child);\n    }\n    \n    child.parent = this;\n    \n    this.scene.flagDirty();\n  }\n\n  remove(child) {\n    Logger.error('Not implemented yet');\n  }\n}\n\n","\nimport Logger from 'js-logger';\n\nimport Spatial from './spatial.js';\nimport Material from './material.js';\nimport {Uniforms} from './shader.js';\n\n// Render order must always be below 255.\nexport const RENDER_ORDER = {\n  AUTO: 0,\n  OPAQUE: 64,\n  TRANSPARENT: 128\n};\n\n// # `Scene`\nexport default class Scene {\n\n  constructor() {\n    this.root = new Spatial(this, '@root');\n    this._dirty = true;\n\n    this.enabled = true;\n\n    this.fallback_material = new Material(this, '@fallback');\n\n    // The camera used to render this scene.\n    this.camera = null;\n\n    this.uniforms = new Uniforms(this.flagDirty.bind(this));\n  }\n\n  setEnabled(enabled) {\n    if(this.enabled === enabled) {\n      return;\n    }\n\n    this.enabled = enabled;\n\n    this.flagDirty();\n  }\n\n  flagDirty() {\n    if(!this.enabled) {\n      return;\n    }\n    \n    this._dirty = true;\n  }\n  \n  setCamera(camera) {\n    if(camera.scene !== this) {\n      Logger.warn(`Cannot set camera '${camera.name}' as default camera for scene it's not in!`);\n      return;\n    }\n    \n    this.camera = camera;\n    \n    this.flagDirty();\n  }\n\n  update(renderer) {\n    if(!this.enabled) {\n      return;\n    }\n    \n    this.root.update(renderer);\n    this.root.updatePost(renderer);\n  }\n\n  batch(renderer) {\n    let renderables = this.root.getRenderables(renderer);\n    \n    renderables.sort((a, b) => {\n      return a.render_sort - b.render_sort;\n    });\n    \n    return renderables;\n  }\n\n  // TODO: fix naive ordering, add batching.\n  draw(renderer) {\n    this._dirty = false;\n\n    if(!this.enabled) {\n      return;\n    }\n    \n    //Logger.debug(`Drawing scene...`);\n    \n    if(!this.camera) {\n      Logger.warn('No camera set in scene, skipping render...');\n      return;\n    }\n\n    //Logger.debug(`Scene is batched and sorted; drawing ${renderables.length} meshes...`);\n\n    let renderables = this.batch(renderer);\n\n    for(let renderable of renderables) {\n      renderable.draw(renderer, false);\n    }\n\n    //this.root.draw(renderer, true);\n  }\n  \n  setUniform(name, value) {\n    this.uniforms.set(name, value);\n  }\n\n}\n\n","export default \"\\n\\nvec4 depthBufferLogVert(vec4 position, float factor, float camera_far_clip) {\\n  position.z = (2.0 * log(factor * position.w + 1.0) / log(factor * camera_far_clip + 1.0) - 1.0) * position.w;\\n\\n  return position;\\n}\\n\\n\\nattribute vec3 aPosition;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uWorldMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform vec4 uCameraData;\\n\\nvarying vec3 vPosition;\\nvarying vec3 vScreenPosition;\\nvarying vec3 vWorldPosition;\\nvarying vec3 vWorldNormal;\\nvarying vec3 vNormal;\\n\\nvoid main() {\\n  vPosition = aPosition;\\n  vNormal = aNormal;\\n  vWorldPosition = (uWorldMatrix * vec4(aPosition, 1.0)).xyz;\\n  vWorldNormal = normalize((uWorldMatrix * vec4(aNormal, 0.0)).xyz);\\n  \\n  gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(aPosition, 1.0);\\n\\n  gl_Position = depthBufferLogVert(gl_Position, 1.0, uCameraData.y);\\n\\n  vScreenPosition = gl_Position.xyz / gl_Position.w;\\n}\\n\";","\nimport {vec3, vec4, quat} from 'gl-matrix';\n\nimport Renderer from '../../../webgl/renderer.js';\nimport Scene, {RENDER_ORDER} from '../../../webgl/scene.js';\nimport Material, {BLEND, DEPTH} from '../../../webgl/material.js';\nimport {WRAP} from '../../../webgl/texture.js';\nimport Spatial, {MeshData, CameraData} from '../../../webgl/spatial.js';\n\nimport default_vert from './shaders/default.vert';\n\nimport star_frag from './shaders/star.frag';\nimport earth_frag from './shaders/earth.frag';\n\nimport atmosphere_frag from './shaders/atmosphere.frag';\n\nexport default class OrreryRenderer extends Renderer {\n\n  init() {\n    this.options.desynchronized = true;\n    \n    super.init();\n  }\n\n  create() {\n    super.create();\n\n    this.scene = new Scene();\n\n    this.createTexture('stellar-body-earth-landinfo-cube')\n      .loadCubemap('static/stellar/bodies/earth/landinfo-{id}.jpg')\n      .setParameters({\n        wrap: [WRAP.CLAMP_TO_EDGE, WRAP.CLAMP_TO_EDGE],\n        anisotropy_level: 16\n      });\n    \n    this.createTexture('stellar-body-earth-normal-cube')\n      .loadCubemap('static/stellar/bodies/earth/normal-{id}.jpg')\n      .setParameters({\n        wrap: [WRAP.CLAMP_TO_EDGE, WRAP.CLAMP_TO_EDGE],\n        anisotropy_level: 16\n      });\n\n    setTimeout(() => {\n      this.color = this.createTexture('stellar-body-earth-color-cube');\n      this.color.loadCubemap('static/stellar/bodies/earth/color-{id}.jpg')\n        .setParameters({\n          wrap: [WRAP.CLAMP_TO_EDGE, WRAP.CLAMP_TO_EDGE],\n          anisotropy_level: 16\n        });\n    }, 5000);\n\n    this.createShader('earth', default_vert, earth_frag);\n    this.createShader('star', default_vert, star_frag);\n    \n    let shader = this.createShader('atmosphere', default_vert, atmosphere_frag);\n\n    this.scene.uniforms.set('uColor', vec3.fromValues(1, 1, 1));\n    \n    this.createQuadspheres();\n    this.createPlanet();\n    this.createCamera();\n\n    this.options = {\n      ...this.options,\n      max_anisotropy_level: 16,\n      display_atmospheres: true\n    };\n  }\n\n  createPlanet() {\n    let earth_material = new Material(this.scene, 'earth');\n    \n    let earth = new Spatial(this.scene, 'earth');\n    earth.setData(new MeshData('quadsphere', earth_material));\n\n    let earth_diameter = 12742 * 1000;\n    \n    earth.scale = vec3.fromValues(earth_diameter, earth_diameter, earth_diameter);\n\n    earth_material.set('uOceanColor', vec3.fromValues(0.02, 0.17, 0.3));\n    earth_material.set('uNightColor', vec3.fromValues(0.8, 0.55, 0.4));\n    \n    earth_material.set('uNormalCube', 'stellar-body-earth-normal-cube');\n    earth_material.set('uLandinfoCube', 'stellar-body-earth-landinfo-cube');\n    earth_material.set('uColorCube', 'stellar-body-earth-color-cube');\n    \n    this.scene.root.add(earth);\n    \n    this.spinny = new Spatial(this.scene, 'spinny');\n    earth.add(this.spinny);\n\n    let atmosphere_material = new Material(this.scene, 'atmosphere');\n    atmosphere_material.blend_mode = BLEND.ADD;\n    atmosphere_material.depth_mode = DEPTH.READ_ONLY;\n    \n    let atmosphere = new Spatial(this.scene, 'atmosphere');\n    let atmosphere_mesh = new MeshData('atmosphere', atmosphere_material)\n    atmosphere.setData(atmosphere_mesh);\n    atmosphere_mesh.order = RENDER_ORDER.TRANSPARENT;\n\n    let atmosphere_diameter = 1.1;\n    \n    atmosphere.scale = vec3.fromValues(atmosphere_diameter, atmosphere_diameter, atmosphere_diameter);\n    atmosphere.setUniform('uAtmosphereParameters', vec4.fromValues(1 / atmosphere_diameter / 2, 1 / 2, 20, 150));\n\n    let atmosphere_scatter_color = vec4.fromValues(10, 20, 40);\n    vec4.scale(atmosphere_scatter_color, atmosphere_scatter_color, 1 / 4);\n    //vec4.pow(atmosphere_scatter_color, atmosphere_scatter_color, 4.0);\n    vec4.scale(atmosphere_scatter_color, atmosphere_scatter_color, 7.0);\n    atmosphere_scatter_color[3] = 10;\n    \n    atmosphere.setUniform('uAtmosphereRaleighScatter', atmosphere_scatter_color);\n\n    this.atmosphere = atmosphere;\n\n    earth.add(atmosphere);\n\n    this.earth = earth;\n    \n    let steps = 0;\n    for(let i=0; i<steps; i++) {\n      let mesh = new Spatial(this.scene, `mesh-${i}`);\n      mesh.setData(new MeshData('quadsphere', new Material(this.scene, 'body')));\n      mesh.setUniform('uColor', vec3.fromValues(1.0, 1.0, 1.0));\n\n      let angle = (i / steps) * Math.PI * 2;\n      let distance = 1;\n      \n      mesh.position = vec3.fromValues(Math.sin(angle) * distance, 0, Math.cos(angle) * distance);\n      mesh.scale = vec3.fromValues(0.1, 0.1, 0.1);\n\n      this.spinny.add(mesh);\n    }\n  }\n\n  createCamera() {\n    this.camera = new Spatial(this.scene, 'camera');\n    this.camera.setData(new CameraData(60, 1, 7500000000*1000));\n\n    this.camera.position = vec3.fromValues(0, 0, this.earth.scale[0] * 1.2);\n    //this.camera.position = vec3.fromValues(0, 0, 10);\n\n    this.scene.root.add(this.camera);\n    this.scene.setCamera(this.camera);\n\n    this.context.clearColor(0.0, 0.0, 0.0, 1.0);\n  }\n  \n  createQuadspheres() {\n    this.createQuadsphere('quadsphere', 32);\n    this.createQuadsphere('atmosphere', 8);\n  }\n\n  // TODO: support triangle strip generation with degenerate triangles.\n  // With a `divisions` value of `0`, the sphere will be a cube.\n  // With a `divisions` value of `1`, the sphere will have one dividing line.\n  // With a `divisions` value of `2`, the sphere will have two dividing lines (16 faces per side.)\n  createQuadsphere(name, divisions, inverted) {\n    if(inverted === undefined) {\n      inverted = false;\n    }\n\n    let sign = 1;\n\n    if(inverted) {\n      sign = -1;\n    }\n    \n    divisions = divisions + 2;\n    \n    let mesh = this.createMesh(name);\n\n    let data = {\n      position: [],\n      normal: [],\n      _triangles: []\n    };\n\n    // Returns an object containing two keys: 'position', and 'triangles'.\n    // The `vertex_function` is called with parameters `x` and `y`, and the value it returns\n    // is directly appended to `vertices`.\n    let createFace = (vertex_function) => {\n      let d = {\n        position: [],\n        _triangles: []\n      };\n\n      for(let x=0; x<divisions; x++) {\n        for(let y=0; y<divisions; y++) {\n          let x_start = (x / divisions) - 0.5;\n          let y_start = ((y / divisions) - 0.5) * sign;\n          \n          let x_end = ((x+1) / divisions) - 0.5;\n          let y_end = (((y+1) / divisions) - 0.5) * sign;\n\n          d.position.push(vertex_function(x_start, y_start));\n          d.position.push(vertex_function(x_start, y_end));\n          d.position.push(vertex_function(x_end, y_end));\n          d.position.push(vertex_function(x_end, y_start));\n\n          let t_idx = d.position.length - 4;\n\n          d._triangles.push([t_idx + 2, t_idx + 1, t_idx + 0]);\n          d._triangles.push([t_idx + 2, t_idx + 0, t_idx + 3]);\n        }\n      }\n\n      return {\n        position: d.position,\n        _triangles: d._triangles.flat()\n      };\n    };\n\n    let xp = createFace((x, y) => {\n      return [0.5, x, y];\n    });\n    \n    let xn = createFace((x, y) => {\n      return [-0.5, -x, y];\n    });\n\n    let yp = createFace((x, y) => {\n      return [-x, 0.5, y];\n    });\n    \n    let yn = createFace((x, y) => {\n      return [x, -0.5, y];\n    });\n    \n    let zp = createFace((x, y) => {\n      return [x, y, 0.5];\n    });\n    \n    let zn = createFace((x, y) => {\n      return [-x, y, -0.5];\n    });\n\n    let appendData = (a, b) => {\n      a._triangles.push.apply(a._triangles, b._triangles.map((value) => {\n        return a.position.length + value;\n      }));\n\n      for(let key of Object.keys(b)) {\n        if(key === '_triangles') {\n          continue;\n        } else {\n          a[key].push.apply(a[key], b[key]);\n        }\n      }\n          \n      return a;\n    };\n\n    data = appendData(data, xp);\n    data = appendData(data, xn);\n\n    data = appendData(data, yp);\n    data = appendData(data, yn);\n\n    data = appendData(data, zp);\n    data = appendData(data, zn);\n\n    data.position.forEach((position, index) => {\n      vec3.normalize(data.position[index], data.position[index]);\n      vec3.scale(data.position[index], data.position[index], 0.5);\n    });\n    \n    data.normal = data.position.map((position, index) => {\n      let normal = vec3.create();\n      vec3.normalize(normal, position);\n\n      if(inverted) {\n        vec3.scale(normal, normal, -1);\n      }\n      \n      return normal;\n    });\n    \n    mesh.createMesh({\n      aPosition: data.position,\n      aNormal: data.normal\n    }, data._triangles);\n  }\n\n  render() {\n    let now = Date.now() / 100;\n\n    this.atmosphere.setEnabled(this.options.display_atmospheres);\n\n    let scale = 1;\n    this.scene.scale = vec3.fromValues(1 / scale, 1 / scale, 1 / scale);\n    \n    this.scene.setUniform('uStarPosition', vec3.fromValues(Math.sin(now / 10.0) * 100000000, 20000000, Math.cos(now / 10.0) *100000000));\n    //this.scene.setUniform('uStarPosition', vec3.fromValues(0, 900000000, 300000000));\n    this.scene.setUniform('uStarColor', vec3.fromValues(1, 0.95, 0.9));\n    quat.fromEuler(this.earth.rotation, 0, now * 0.5, 0);\n\n    this.paused = this.options.paused;\n\n    if(super.render()) {\n      this.viewer.setState(state => ({\n        stats_fps: this.performance.fps,\n        stats_vertex_count: this.performance.vertex_count,\n        stats_draw_call_count: this.performance.draw_call_count,\n        stats_frame_count: this.performance.current_frame,\n      }));\n    }\n    \n    this.viewer.setState(state => ({\n      loading: this.isLoading()\n    }));\n  }\n  \n}\n","export default \"precision highp float;\\n\\nuniform vec3 uLandColor;\\nuniform vec3 uOceanColor;\\nuniform vec3 uNightColor;\\n\\nuniform vec3 uStarPosition;\\nuniform vec3 uStarColor;\\n\\nuniform samplerCube uLandinfoCube;\\nuniform samplerCube uNormalCube;\\nuniform samplerCube uColorCube;\\n\\nuniform mat4 uViewMatrix_i;\\nuniform mat4 uWorldMatrix;\\nuniform mat4 uWorldMatrix_i;\\n\\nvarying vec3 vPosition;\\nvarying vec3 vScreenPosition;\\nvarying vec3 vNormal;\\nvarying vec3 vWorldPosition;\\nvarying vec3 vWorldNormal;\\nvarying vec3 vViewNormal;\\n\\nconst float PI = 3.141592653;\\nconst float PI_2 = 6.28318530;\\n\\n\\nvec3 getViewDirection() {\\n  vec3 camera_position = uViewMatrix_i[3].xyz;\\n  return normalize(vWorldPosition - camera_position);\\n}\\n\\nvec3 getStarDirection() {\\n  return normalize(uStarPosition - vWorldPosition);\\n}\\n\\n\\nvoid main() {\\n  vec3 view_direction = getViewDirection();\\n  vec3 star_direction = getStarDirection();\\n  \\n  vec3 t_normal = textureCube(uNormalCube, normalize(vNormal)).rgb * 2.0 - 1.0;\\n  vec3 world_normal = normalize((uWorldMatrix * vec4(t_normal, 0.0)).xyz);\\n  \\n  //float blend = smoothstep(-0.01, 0.01, vScreenPosition.x);\\n  \\n  //gl_FragColor = vec4(mix(t_normal, world_normal, blend) * vec3(1.0, 1.0, 1.0), 1.0);\\n  //return;\\n  \\n  //vec3 world_normal = normalize((uWorldMatrix * vec4(t_normal, 0.0)).xyz);\\n  //vec3 world_normal = normalize((uWorldMatrix * vec4(aNormal, 0.0)).xyz);\\n  \\n  float star_exposure = min(dot(world_normal, star_direction), dot(vWorldNormal, star_direction));\\n\\n  //gl_FragColor = vec4(vec3(1.0) * star_exposure, 1.0);\\n  //return;\\n  vec3 star_brightness = pow(clamp(star_exposure, 0.0, 1.0), 1.0) * uStarColor;\\n  star_brightness = star_brightness * 0.9 + 0.1;\\n\\n  float len = sqrt(pow(vPosition.x, 2.0) + pow(vPosition.z, 2.0));\\n  vec3 reflection_direction = reflect(star_direction, vWorldNormal);\\n\\n  vec3 t_landinfo = textureCube(uLandinfoCube, normalize(vNormal)).rgb;\\n  //vec3 t_color = texture2D(uTexture, coordinates).rgb;\\n\\n  vec3 t_color = textureCube(uColorCube, normalize(vNormal)).rgb;\\n\\n  float cloud_cover = t_landinfo.b;\\n\\n  vec3 land_color = uLandColor;\\n\\n  vec3 color = mix(uOceanColor, t_color, t_landinfo.r);\\n\\n  vec3 diffuse = color * star_brightness;\\n  vec3 specular = vec3(0.5) * pow(clamp(dot(reflection_direction, view_direction), 0.0, 1.0), 12.0) * (1.0 - t_landinfo.r);\\n\\n  //t_landinfo = texture2D(uLandinfo, coordinates, pow(cloud_cover, 1.5) * 1.0).rgb;\\n  \\n  vec3 night = uNightColor * t_landinfo.g * clamp(pow(-star_exposure, 0.5), 0.0, 1.0);\\n\\n  color = diffuse + specular + night;\\n\\n  vec3 cloud_color = vec3(1.0) * pow(clamp(star_exposure, 0.0, 1.0), 0.6);//cloud_cover;\\n\\n  color = mix(color, vec3(0.0), t_landinfo.b);\\n  \\n  vec3 cloud_shadow_coord = normalize(vNormal + normalize((uWorldMatrix_i * vec4(star_direction, 0.0)).xyz) * -0.01);\\n  float cloudshadow = textureCube(uLandinfoCube, cloud_shadow_coord).b;\\n\\n  color = mix(color, cloud_color, pow(cloudshadow, 0.75));\\n  \\n  gl_FragColor = vec4(color, 1.0);\\n}\\n\";","export default \"precision mediump float;\\n\\nuniform vec3 uColor;\\n\\nvarying vec3 vPosition;\\nvarying vec3 vWorldPosition;\\nvarying vec3 vWorldNormal;\\n\\nvoid main() {\\n  float brightness = dot(vWorldNormal, vec3(0.0, 0.0, 1.0));\\n  gl_FragColor = vec4(uColor * pow(brightness, 1.0), 1.0);\\n}\\n\";","export default \"precision highp float;\\n\\nuniform vec3 uColor;\\n\\nuniform vec3 uStarPosition;\\nuniform vec3 uStarColor;\\n\\n// X = planet radius; Y = atmosphere radius; Z = atmosphere power; W = mie strength\\nuniform vec4 uAtmosphereParameters;\\n\\n// R = red scattering; G = green scattering; B = blue scattering; A = mie power\\nuniform vec4 uAtmosphereRaleighScatter;\\n\\nuniform mat4 uWorldMatrix;\\nuniform mat4 uWorldMatrix_i;\\nuniform mat4 uViewMatrix;\\nuniform mat4 uViewMatrix_i;\\n\\nvarying vec3 vPosition;\\nvarying vec3 vWorldPosition;\\nvarying vec3 vWorldNormal;\\n\\n// Returns a vec3 containing <distance to sphere surface>, <distance from entry (or camera) to exit>, angle-of-incidence\\n// If the ray does not intersect the sphere, the X value is negative.\\nvec4 raySphereDistance(vec3 point, vec3 dir, float radius) {\\n  float radius2 = radius * radius;\\n  \\n  float tca = -dot(point, dir);\\n\\n  float d2 = dot(point, point) - (tca * tca);\\n\\n  float thc = sqrt(radius2 - d2);\\n\\n  float shadow = atan(sqrt(d2), thc) / 1.57079;\\n  \\n  float start = tca - thc;\\n  float end = tca + thc;\\n\\n  if(d2 > (radius2)) {\\n    return vec4(-1.0, -1.0, shadow, 0.0);\\n  }\\n\\n  if(end < 0.0) {\\n    return vec4(-1.0, -1.0, shadow, 0.0);\\n  }\\n\\n  return vec4(start, end - max(start, 0.0), shadow, 0.0);\\n}\\n\\n// Altitude is a floating-point value from 0..1 (where 0 is ground and 1 is sky.)\\nfloat densityAtAltitude(float altitude) {\\n  return exp(-clamp(altitude, 0.0, 1.0) * uAtmosphereParameters.z) * (1.0 - altitude);\\n}\\n\\nfloat densityAtPoint(vec3 position) {\\n  float atmosphere_height = uAtmosphereParameters.y - uAtmosphereParameters.x;\\n  float altitude = (length(position) - uAtmosphereParameters.x) / atmosphere_height;\\n\\n  return densityAtAltitude(altitude);\\n}\\n\\nconst int OPTICAL_DEPTH_STEPS = 5;\\nfloat atmosphereOpticalDepth(vec3 position, vec3 direction, float ray_length) {\\n  vec3 point = position;\\n  float step_size = ray_length / float(OPTICAL_DEPTH_STEPS - 1);\\n  float opticalDepth = 0.0;\\n\\n  for(int i=0; i<OPTICAL_DEPTH_STEPS; i++) {\\n    point = position + direction * step_size * float(i);\\n    opticalDepth += densityAtPoint(point) * step_size;\\n  }\\n\\n  return opticalDepth;\\n}\\n\\nconst int SCATTERING_STEPS = 8;\\n\\nvec3 atmosphereColor(vec3 position, vec3 direction, vec3 star_direction) {\\n  float planet_radius = uAtmosphereParameters.x;\\n  float atmosphere_radius = uAtmosphereParameters.y;\\n\\n  vec4 atmosphere_ray = raySphereDistance(position, direction, atmosphere_radius);\\n\\n  // The starting point of the ray (i.e. where it intersects with the atmosphere.)\\n  vec3 ray_start = position - direction * -max(atmosphere_ray.x, 0.0);\\n  float ray_length = max(atmosphere_ray.y, 0.0);\\n  \\n  vec4 planet_ray = raySphereDistance(position, direction, planet_radius);\\n\\n  if(planet_ray.y > 0.0) {\\n    ray_length = (planet_ray.x - atmosphere_ray.x) * 0.9;\\n  }\\n\\n  // The total atmosphere color at this point.\\n  vec3 color = vec3(0.0);\\n\\n  float step_size = ray_length / float(SCATTERING_STEPS);\\n  \\n  for(int i=0; i<=SCATTERING_STEPS; i++) {\\n    // The point in the atmosphere, in model space.\\n    vec3 point = ray_start + direction * step_size * float(i);\\n\\n    vec4 star_ray = raySphereDistance(point, star_direction, atmosphere_radius);\\n    // The distance through the atmosphere to the sun.\\n    float star_distance = max(star_ray.y, 0.0);\\n\\n    // Cast a ray against the planet towards the sun.\\n    //planet_ray = raySphereDistance(point, star_direction, planet_radius);\\n\\n    // How much of the sun is hitting this sample, from 0..1.\\n    float star_exposure = 1.0;\\n\\n    // If the planet is in the way, calculate the smooth shadow.\\n    /*\\n    if(planet_ray.y > 0.0) {\\n      star_exposure = smoothstep(0.5, 1.0, planet_ray.z);\\n    }\\n*/\\n\\n    // The optical depth (= approximate density) of the atmosphere along the ray towards the star.\\n    float star_ray_optical_depth = atmosphereOpticalDepth(point, star_direction, star_distance);\\n    float view_ray_optical_depth = atmosphereOpticalDepth(point, -direction, step_size);\\n\\n    // Mie scattering. Essentially a power curve when we're between the viewer and the sun.\\n    float mie = uAtmosphereParameters.w * pow(max(dot(star_direction, direction), 0.0), uAtmosphereRaleighScatter.w);\\n    \\n    vec3 transmittance = exp(-(star_ray_optical_depth + view_ray_optical_depth) * uAtmosphereRaleighScatter.rgb) * star_exposure * uStarColor;\\n\\n    color += densityAtPoint(point) * transmittance * uAtmosphereRaleighScatter.rgb * step_size;\\n    color += mie * densityAtPoint(point) * transmittance * step_size;\\n  }\\n\\n  return color;\\n}\\n\\nvoid main() {\\n  // The direction of the star, in world space.\\n  //vec3 star_direction = normalize(vWorldPosition - uStarPosition);\\n  \\n  //vec3 camera_position = uViewMatrix_i[3].xyz;\\n  //vec3 view_direction = normalize(vWorldPosition - camera_position);\\n  \\n  vec3 star_direction = normalize((uWorldMatrix_i * vec4(uStarPosition - vWorldPosition, 0.0)).xyz);\\n  \\n  vec3 camera_position = (uWorldMatrix_i * vec4(uViewMatrix_i[3].xyz, 1.0)).xyz;\\n  vec3 view_direction = normalize((uWorldMatrix_i * vec4(vWorldPosition, 1.0)).xyz - camera_position);\\n  //vec3 view_direction = normalize((uWorldMatrix_i * vec4(vWorldPosition - camera_position, 0.0)).xyz);\\n  \\n  gl_FragColor = vec4(atmosphereColor(camera_position, view_direction, star_direction), 1.0);\\n}\\n\";","\nimport React from 'react';\n\nimport './Empty.css';\n\nfunction EmptyState(props) {\n  return (\n    <div className={`EmptyState ${props.variant ? `App--theme-${props.variant}` : ''}`}>\n      <div className=\"box\">\n        <h1>{props.title}</h1>\n        <h2 className=\"message\">{props.message}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default EmptyState;\n","\nimport React from 'react';\n\nimport './Switch.css';\n\nclass Switch extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {checked: props.checked};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      checked: !state.checked\n    }));\n\n    if('onChange' in this.props) {\n      this.props.onChange(!this.state.checked, this);\n    }\n  }\n\n  render() {\n    return (\n      <span className={`Switch ${this.props.checked ? 'Switch--checked' : ''}`} onClick={this.handleClick}>\n        <span className=\"Switch__label\">{this.props.label}</span>\n        <span className=\"Switch__element\"></span>\n      </span>\n    );\n  }\n}\n\nexport default Switch;\n","\nimport React from 'react';\n\nimport CircularIcon from './Circular.svg';\n\nimport './Circular.css';\n\n// # `CircularProgress`\n//\n// Displays a circular progress indicator.\n// Set the `angle` property to set the exact angle in degrees,\n// or the `step` property to an integer (and `stepSize` to the angular factor for `step`.)\n// `size` is the size, in pixels (default 32); this is the size of the element, as a whole.\nfunction CircularProgress(props) {\n  let visible = props.visible === undefined ? true : props.visible;\n  \n  let angle = props.angle === undefined ? null : props.angle;\n  let size = props.size || 32;\n\n  if(props.step) {\n    angle = props.step * 90 / (props.stepSize || 90 / 4);\n  }\n\n  let rotate = {};\n\n  if(angle) {\n    rotate = {\n      transform: `rotate(${angle % 360}deg)`,\n    };\n  }\n\n  return (\n    <div\n      className={`CircularProgress ${angle ? '' : 'CircularProgress--spinning'} ${visible ? '' : 'CircularProgress--hidden'}`}\n      style={{\n        width: `${size}px`,\n        height: `${size}px`,\n        ...rotate\n      }}\n      dangerouslySetInnerHTML={{__html: CircularIcon}}\n    >\n    </div>\n  );\n}\n\nexport default CircularProgress;\n","\nimport React from 'react';\nimport AnimateHeight from 'react-animate-height';\n\nimport Logger from 'js-logger';\n\nimport OrreryRenderer from './renderer.js';\n\nimport EmptyState from '../../display/Empty.jsx';\n\nimport Switch from '../../interactive/Switch.jsx';\nimport CircularProgress from '../../progress/Circular.jsx';\n\nimport './style.css';\n\n// A 3D viewer for stellar bodies and orbits.\nclass OrreryViewer extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      loaded: false,\n      paused: false,\n\n      loading: true,\n      \n      use_anisotropy: true,\n      display_stats: true,\n      display_atmospheres: true,\n      login: '',\n      errorMessage: null,\n      \n      stats_fps: 0,\n      stats_vertex_count: 0,\n      stats_draw_call_count: 0,\n      stats_frame_count: 0,\n    };\n\n    this.handleRendererStateChanged = this.handleRendererStateChanged.bind(this);\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    \n    this.canvas = React.createRef();\n    this.renderer = null;\n  }\n\n  componentDidMount() {\n    this.renderer = new OrreryRenderer(this.canvas.current);\n\n    this.initRenderer();\n\n    window.addEventListener('resize', this.handleWindowResize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize)\n\n    this.deinitRenderer();\n  }\n\n  handleWindowResize() {\n    this.renderer.resize();\n  }\n\n  handleRendererStateChanged(event) {\n    if(!this.renderer.isLoaded()) {\n      return;\n    }\n\n    this.setState((state, props) => ({\n      loaded: true\n    }));\n  }\n\n  initRenderer() {\n    try {\n      this.renderer.on('statechange', this.handleRendererStateChanged);\n      this.renderer.init();\n      this.renderer.viewer = this;\n    } catch(e) {\n      Logger.error('Error while creating WebGL context: ', e);\n      \n      this.setState((state, props) => ({\n        errorMessage: `We couldn't initialize WebGL. It could be you; it could be us.'${e.message}'`\n      }));\n\n      return;\n    }\n  }\n\n  deinitRenderer() {\n    this.renderer.deinit();\n  }\n\n  createSwitchHandler(name) {\n    return (checked) => {\n      this.setState(state => ({\n        [name]: checked\n      }));\n    };\n  }\n\n  render() {\n    var emptyState = null;\n\n    if(this.state.errorMessage) {\n      emptyState = (\n        <EmptyState variant=\"dark\" title=\"Something went wrong\" message={this.state.errorMessage}></EmptyState>\n      );\n    } else {\n      emptyState = (\n        <div className=\"OrreryViewer__loading\">\n          <CircularProgress size={64} />\n        </div>\n      );\n    }\n\n    if(this.renderer) {\n      this.renderer.setOption('display_atmospheres', this.state.display_atmospheres);\n      this.renderer.setOption('max_anisotropy_level', this.state.use_anisotropy ? 16 : 0);\n      this.renderer.setOption('paused', this.state.paused);\n    }\n    \n    return (\n      <section className={`OrreryViewer ${this.state.loaded ? 'OrreryViewer--loaded' : ''}`}>\n        <canvas ref={this.canvas}></canvas>\n        {emptyState}\n        <div className=\"OrreryViewer__info\">\n          <CircularProgress visible={this.state.loading} size={24} />\n        </div>\n        <div className=\"OrreryViewer__options App--theme-light\">\n          <Switch\n            label=\"Pause Renderer\"\n            checked={this.state.paused}\n            onChange={this.createSwitchHandler('paused')}\n          />\n          <Switch\n            label=\"Use Anisotropy\"\n            checked={this.state.use_anisotropy}\n            onChange={this.createSwitchHandler('use_anisotropy')}\n          />\n          <Switch\n            label=\"Planet Atmospheres\"\n            checked={this.state.display_atmospheres}\n            onChange={this.createSwitchHandler('display_atmospheres')}\n          />\n          <Switch\n            label=\"Show Stats\"\n            checked={this.state.display_stats}\n            onChange={this.createSwitchHandler('display_stats')}\n          />\n          <AnimateHeight\n            duration={150}\n            height={this.state.display_stats ? 'auto' : 0}\n          >\n            <ul className={`stats`}>\n              <li>{this.state.stats_fps.toFixed(1)} fps</li>\n              <li>{this.state.stats_draw_call_count} draw calls</li>\n              <li>{this.state.stats_vertex_count} vertices</li>\n              <li>{this.state.stats_frame_count} frames</li>\n              <li className=\"OrreryViewer__progress\">\n                <span>Render</span>\n                <CircularProgress step={this.state.stats_frame_count} />\n              </li>\n            </ul>\n          </AnimateHeight>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default OrreryViewer;\n","import React from 'react';\nimport './App.css';\n\nimport PageHeader from './components/page/Header.jsx';\nimport OrreryViewer from './components/viewer/Orrery/index.jsx';\n\nfunction App() {\n  return (\n    <main className=\"App\">\n      <PageHeader></PageHeader>\n      <OrreryViewer></OrreryViewer>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport Logger from 'js-logger';\n\nLogger.useDefaults();\nLogger.setLevel(Logger.TRACE);\n\nvar consoleHandler = Logger.createDefaultHandler();\nvar myHandler = (messages, context) => {\n  if(context.level.value > Logger.DEBUG.value) {\n\t  //alert([...messages].join(', '))\n  }\n};\n\nLogger.setHandler(function (messages, context) {\n\tconsoleHandler(messages, context);\n\tmyHandler(messages, context);\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('react-root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}